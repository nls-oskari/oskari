Oskari.clazz.define("Oskari.mapframework.wmts.mapmodule.plugin.WmtsLayerPlugin",function(e){this.mapModule=null,this.pluginName=null,this._sandbox=null,this._map=null,this._supportedFormats={},this.config=e},{__name:"WmtsLayerPlugin",getName:function(){return this.pluginName},getMap:function(){return this._map},getMapModule:function(){return this.mapModule},setMapModule:function(e){this.mapModule=e,this.pluginName=e.getName()+this.__name},register:function(){this.getMapModule().setLayerPlugin("WmtsLayer",this)},unregister:function(){this.getMapModule().setLayerPlugin("WmtsLayer",null)},init:function(e){var t=(this.config?this.config.sandbox:null)||"sandbox",n=Oskari.getSandbox(t),r=n.getService("Oskari.mapframework.service.MapLayerService");if(r){r.registerLayerModel("wmtslayer","Oskari.mapframework.wmts.domain.WmtsLayer");var i=Oskari.clazz.create("Oskari.mapframework.wmts.service.WmtsLayerModelBuilder");r.registerLayerModelBuilder("wmtslayer",i)}},startPlugin:function(e){this._sandbox=e,this._map=this.getMapModule().getMap(),e.register(this);var t;for(t in this.eventHandlers)this.eventHandlers.hasOwnProperty(t)&&e.registerForEventByName(this,t)},stopPlugin:function(e){var t;for(t in this.eventHandlers)this.eventHandlers.hasOwnProperty(t)&&e.unregisterFromEventByName(this,t);e.unregister(this),this._map=null,this._sandbox=null},start:function(e){},stop:function(e){},eventHandlers:{AfterMapLayerAddEvent:function(e){this.afterMapLayerAddEvent(e)},AfterMapLayerRemoveEvent:function(e){this.afterMapLayerRemoveEvent(e)},AfterChangeMapLayerOpacityEvent:function(e){this.afterChangeMapLayerOpacityEvent(e)},AfterChangeMapLayerStyleEvent:function(e){this.afterChangeMapLayerStyleEvent(e)}},onEvent:function(e){return this.eventHandlers[e.getName()].apply(this,[e])},preselectLayers:function(e){var t=this._sandbox,n,r,i;for(n=0;n<e.length;n++)r=e[n],i=r.getId(),r.isLayerOfType("WMTS")&&(t.printDebug("preselecting "+i),this.addMapLayerToMap(r,!0,r.isBaseLayer()))},afterMapLayerAddEvent:function(e){this.addMapLayerToMap(e.getMapLayer(),e.getKeepLayersOrder(),e.isBasemap())},addMapLayerToMap:function(e,t,n){if(!e.isLayerOfType("WMTS"))return;var r=this,i=r.getMap(),s=e.getWmtsMatrixSet().matrixIds,o=e.getWmtsLayerDef(),u=null;e.isBaseLayer()||e.isGroupLayer()?u="basemap_"+e.getId():u="layer_"+e.getId();var a=this._sandbox,f="image/png",l="KVP",c=o.resourceUrl?o.resourceUrl.tile?o.resourceUrl.tile.template:undefined:undefined;c?l="REST":c=e.getWmtsUrls()[0][0].url;var h=e.getWmtsMatrixSet();s=[];var p=[],d=[],v,m,g;for(v=0;v<h.matrixIds.length;v++)s.push(h.matrixIds[v]),m=h.matrixIds[v].scaleDenominator,g=m/90.71446714322*OpenLayers.METERS_PER_INCH,p.push(g),d.push(g);var y={name:u.split(".").join(""),url:c,requestEncoding:l,layer:e.getWmtsName(),matrixSet:h.identifier,format:f,style:e.getCurrentStyle().getName(),visibility:!0,transparent:!0,matrixIds:s,isBaseLayer:e.isBaseLayer(),buffer:0,serverResolutions:d,layerDef:o,zoomOffset:e.getZoomOffset()};a.printDebug("[WmtsLayerPlugin] creating WMTS Layer "+h.identifier+" / "+y.id+"/"+y.layer+"/"+y.url);var b=new OpenLayers.Layer.WMTS(y);b.opacity=e.getOpacity()/100,a.printDebug("[WmtsLayerPlugin] created WMTS layer "+b),i.addLayers([b])},afterMapLayerRemoveEvent:function(e){var t=e.getMapLayer();this.removeMapLayerFromMap(t)},removeMapLayerFromMap:function(e){if(!e.isLayerOfType("WMTS"))return;var t;if(e.isBaseLayer()||e.isGroupLayer()){var n="",r;if(e.getSubLayers().length>0)for(r=0;r<e.getSubLayers().length;r++)t=this._map.getLayersByName("basemap_"+e.getSubLayers()[r].getId()),t[0].destroy();else t=this._map.getLayersByName("layer_"+e.getId()),t[0].destroy()}else t=this._map.getLayersByName("layer_"+e.getId()),t[0].destroy()},getOLMapLayers:function(e){if(!e.isLayerOfType("WMTS"))return null;if(!e.isBaseLayer()&&!e.isGroupLayer())return this._map.getLayersByName("layer_"+e.getId());var t="",n;if(e.getSubLayers().length>0){for(n=0;n<e.getSubLayers().length;n++)return this._map.getLayersByName("basemap_"+e.getSubLayers()[n].getId());return null}return this._map.getLayersByName("layer_"+e.getId())},afterChangeMapLayerOpacityEvent:function(e){var t=e.getMapLayer(),n;if(!t.isLayerOfType("WMTS"))return;if(t.isBaseLayer()||t.isGroupLayer())if(t.getSubLayers().length>0){var r;for(r=0;r<t.getSubLayers().length;r++)n=this._map.getLayersByName("basemap_"+t.getSubLayers()[r].getId()),n[0].setOpacity(t.getOpacity()/100)}else n=this._map.getLayersByName("layer_"+t.getId()),n[0]!==null&&n[0]!==undefined&&n[0].setOpacity(t.getOpacity()/100);else this._sandbox.printDebug("Setting Layer Opacity for "+t.getId()+" to "+t.getOpacity()),n=this._map.getLayersByName("layer_"+t.getId()),n[0]!==null&&n[0]!==undefined&&n[0].setOpacity(t.getOpacity()/100)},afterChangeMapLayerStyleEvent:function(e){var t=e.getMapLayer();if(!t.isLayerOfType("WMTS"))return;if(!t.isBaseLayer()){var n=this._map.getLayersByName("layer_"+t.getId());n!==null&&n!==undefined&&n[0].mergeNewParams({styles:t.getCurrentStyle().getName()})}}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]}),define("bundles/framework/bundle/mapwmts/plugin/wmtslayer/WmtsLayerPlugin",function(){}),Oskari.clazz.define("Oskari.mapframework.wmts.domain.WmtsLayer",function(){this._WmtsLayerName=null,this._WmtsMatrixSet=null,this._WmtsUrls=[],this._layerType="WMTS"},{setWmtsName:function(e){this._WmtsName=e},getWmtsName:function(){return this._WmtsName},setWmtsMatrixSet:function(e){this._WmtsMatrixSet=e},getWmtsMatrixSet:function(){return this._WmtsMatrixSet},setWmtsLayerDef:function(e){this._WmtsLayerDef=e},getWmtsLayerDef:function(){return this._WmtsLayerDef},addWmtsUrl:function(e){this._WmtsUrls.push(e)},getWmtsUrls:function(){return this._WmtsUrls},getZoomOffset:function(){return this._zoomOffSet},setZoomOffset:function(e){this._zoomOffSet=2}},{extend:["Oskari.mapframework.domain.AbstractLayer"]}),define("bundles/framework/bundle/mapwmts/domain/WmtsLayer",function(){}),Oskari.clazz.define("Oskari.mapframework.wmts.service.WMTSLayerService",function(e){this.mapLayerService=e,this.capabilities={}},{setCapabilities:function(e,t){this.capabilities[e]=t},getCapabilities:function(e){return this.capabilities[e]},readWMTSCapabilites:function(e,t,n,r,i){var s=this,o=new OpenLayers.Format.WMTSCapabilities,u=OpenLayers.Util.extend({url:t,params:{SERVICE:"WMTS",VERSION:"1.0.0",REQUEST:"GetCapabilities"},success:function(t){var i=t.responseXML;if(!i||!i.documentElement)i=t.responseText;var u=o.read(i);s.setCapabilities(e,u);var a=s.parseCapabilitiesToLayers(e,u,n);r&&r.apply(this,[a,u])},failure:function(){alert("Trouble getting capabilities doc"),OpenLayers.Console.error.apply(OpenLayers.Console,arguments)}},i||{});console.log(u),OpenLayers.Request.GET(u)},parseCapabilitiesToLayers:function(e,t,n){var r=this,i=this.mapLayerService,s=null;t.operationsMetadata.GetTile.dcp.http.getArray?s=t.operationsMetadata.GetTile.dcp.http.getArray:s=t.operationsMetadata.GetTile.dcp.http.get;var o=t.contents.layers,u=t.contents,a=u.tileMatrixSets[n],f=[],l,c,h,p,d,v,m,g,y,b,w;for(l=0;l<o.length;l++){c=o[l],h=c.identifier,p=c.identifier,d={wmtsName:h,descriptionLink:"",orgName:e,type:"wmtslayer",legendImage:"",formats:{value:"text/html"},isQueryable:!0,style:"",dataUrl:"",name:h,opacity:100,inspire:e,maxScale:1},v=Oskari.clazz.create("Oskari.mapframework.wmts.domain.WmtsLayer"),v.setAsNormalLayer(),v.setId(h.split(".").join("_")),v.setName(d.name),v.setWmtsName(d.wmtsName),v.setOpacity(d.opacity),v.setMaxScale(d.maxScale),v.setMinScale(d.minScale),v.setDescription(d.info),v.setDataUrl(d.dataUrl),v.setOrganizationName(d.orgName),v.setInspireName(d.inspire),v.setWmtsMatrixSet(a),v.setWmtsLayerDef(c),v.setVisible(!0),v.addWmtsUrl(s),m=Oskari.clazz.builder("Oskari.mapframework.domain.Style");for(b=0,w=c.styles.length;b<w;++b){g=c.styles[b],y=m(),y.setName(g.identifier),y.setTitle(g.identifier),v.addStyle(y);if(g.isDefault){v.selectStyle(g.identifier);break}}i.addLayer(v,!1),f.push(v)}return f}}),define("bundles/framework/bundle/mapwmts/service/WmtsLayerService",function(){}),Oskari.clazz.define("Oskari.mapframework.wmts.service.WmtsLayerModelBuilder",function(){},{parseLayerData:function(e,t,n){var r,i,s,o;e.setWmtsName(t.wmsName);if(t.wmsUrl){o=t.wmsUrl.split(",");for(r=0;r<o.length;r++)e.addWmtsUrl(o[r])}var u=Oskari.clazz.builder("Oskari.mapframework.domain.Style"),a;for(r=0,i=t.styles.length;r<i;++r){a=t.styles[r],s=u(),s.setName(a.identifier),s.setTitle(a.identifier),e.addStyle(s);if(a.isDefault){e.selectStyle(a.identifier);break}}e.setZoomOffset(),e.setFeatureInfoEnabled(!0);if(t.tileMatrixSetData&&t.tileLayerData)e.setWmtsMatrixSet(t.tileMatrixSetData),e.setWmtsLayerDef(t.tileLayerData);else if(t.tileMatrixSetData&&t.tileMatrixSetId){var f=t.tileMatrixSetId;if(t.tileMatrixSetData.contents&&t.tileMatrixSetData.contents.tileMatrixSets){var l=t.tileMatrixSetData.contents.tileMatrixSets[f];e.setWmtsMatrixSet(l)}var c=e.getWmtsName(),h=t.tileMatrixSetData.contents.layers,p;for(p=0;p<h.length;p++)if(h[p].identifier===c){e.setWmtsLayerDef(h[p]);break}}}}),define("bundles/framework/bundle/mapwmts/service/WmtsLayerModelBuilder",function(){}),Oskari.clazz.define("Oskari.mapframework.bundle.MapWmtsBundleInstance",function(e){this.name="MapWmts",this.mediator=null,this.sandbox=null,this.service=null,this.ui=null},{start:function(){if(this.mediator.getState()==="started")return;var e=this,t=e.conf,n=(t?t.sandbox:null)||"sandbox",r=Oskari.getSandbox(n);this.sandbox=r;var i=r.getService("Oskari.mapframework.service.MapLayerService");i.registerLayerModel("wmtslayer","Oskari.mapframework.wmts.domain.WmtsLayer");var s=Oskari.clazz.create("Oskari.mapframework.wmts.service.WmtsLayerModelBuilder");i.registerLayerModelBuilder("wmtslayer",s);var o=Oskari.clazz.create("Oskari.mapframework.wmts.service.WMTSLayerService",i);return this.service=o,this.mediator.setState("started"),this},update:function(e,t,n,r){e.alert("RECEIVED update notification @BUNDLE_INSTANCE: "+r)},stop:function(){return this.mediator.setState("stopped"),this},getName:function(){return this.__name},__name:"Oskari.mapframework.bundle.MapWmtsBundleInstance"},{protocol:["Oskari.bundle.BundleInstance","Oskari.mapframework.bundle.extension.Extension"]}),define("bundles/framework/bundle/mapwmts/instance",function(){}),define("src/framework/mapwmts/module",["oskari","jquery","bundles/framework/bundle/mapwmts/plugin/wmtslayer/WmtsLayerPlugin","bundles/framework/bundle/mapwmts/domain/WmtsLayer","bundles/framework/bundle/mapwmts/service/WmtsLayerService","bundles/framework/bundle/mapwmts/service/WmtsLayerModelBuilder","bundles/framework/bundle/mapwmts/instance"],function(e,t){return e.bundleCls("mapwmts").category({create:function(){return e.clazz.create("Oskari.mapframework.bundle.MapWmtsBundleInstance")},update:function(e,t,n,r){e.alert("RECEIVED update notification "+r)}})});
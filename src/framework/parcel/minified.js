Oskari.clazz.define("Oskari.mapframework.bundle.parcel.event.FinishedDrawingEvent",function(){},{getName:function(){return"Parcel.FinishedDrawingEvent"}},{protocol:["Oskari.mapframework.event.Event"]}),define("bundles/framework/bundle/parcel/event/FinishedDrawingEvent",function(){}),Oskari.clazz.define("Oskari.mapframework.bundle.parcel.event.SaveDrawingEvent",function(e){this._drawing=e},{getName:function(){return"Parcel.SaveDrawingEvent"},getDrawing:function(){return this._drawing}},{protocol:["Oskari.mapframework.event.Event"]}),define("bundles/framework/bundle/parcel/event/SaveDrawingEvent",function(){}),Oskari.clazz.define("Oskari.mapframework.Parcel.event.ParcelSelectedEvent",function(e){this._parcel=e},{getName:function(){return"Parcel.ParcelSelectedEvent"},getPlace:function(){return this._parcel}},{protocol:["Oskari.mapframework.event.Event"]}),define("bundles/framework/bundle/parcel/event/ParcelSelectedEvent",function(){}),Oskari.clazz.define("Oskari.mapframework.bundle.parcel.event.ParcelInfoLayerRegisterEvent",function(e){this._layer=e},{getName:function(){return"ParcelInfo.ParcelLayerRegisterEvent"},getLayer:function(){return this._layer}},{protocol:["Oskari.mapframework.event.Event"]}),define("bundles/framework/bundle/parcel/event/ParcelInfoLayerRegisterEvent",function(){}),Oskari.clazz.define("Oskari.mapframework.bundle.parcel.event.ParcelLayerUnregisterEvent",function(e){this._layer=e},{getName:function(){return"ParcelInfo.ParcelLayerUnregisterEvent"},getLayer:function(){return this._layer}},{protocol:["Oskari.mapframework.event.Event"]}),define("bundles/framework/bundle/parcel/event/ParcelInfoLayerUnregisterEvent",function(){}),Oskari.clazz.define("Oskari.mapframework.bundle.parcel.plugin.DrawPlugin",function(e){this.instance=e,this.mapModule=null,this.pluginName=null,this._sandbox=null,this._map=null,this.controls=null,this.drawControls=null,this.drawLayer=null,this.editLayer=null,this.markerLayer=null,this.currentDrawMode=null,this.currentFeatureType=null,this.splitter=null,this.backupFeatures=[],this.splitSelection=!1,this.basicStyle=null,this.selectStyle=null,this.selectedFeature=-2,this.selectInfoControl=null},{getName:function(){return this.pluginName},getMap:function(){return this._map},processFeatures:function(){var e=this,t=e._sandbox.getEventBuilder("Parcel.FinishedDrawingEvent")();e._sandbox.notifyAll(t),e.toggleControl(),e.splitFeature()},init:function(e){var t=this;this.drawLayer=new OpenLayers.Layer.Vector("Parcel Draw Layer",{eventListeners:{featuresadded:function(e){if(e.features[0].geometry.CLASS_NAME==="OpenLayers.Geometry.LineString"){var n=t.instance.getLocalization("notification").calculating,r=Oskari.clazz.create("Oskari.userinterface.component.Popup");r.show(n.title,""),setTimeout(function(){t.processFeatures(),r.close()},200)}else t.processFeatures()}}}),this.drawLayer.quantumStep=5e3,this.editLayer=new OpenLayers.Layer.Vector("Parcel Edit Layer",{eventListeners:{featuremodified:function(e){var n=e.feature.geometry.components[0];n.components[0].id!==n.components[n.components.length-1].id?this.updateLine():this.updateHole(e.feature),jQuery("svg").find("circle").css("cursor","move"),jQuery("div.olMapViewport").find("oval").css("cursor","move"),this.redraw(),t.drawLayer.redraw()}}}),this.editLayer.updateLine=function(){var e=this.features[0];if(e.geometry.CLASS_NAME==="OpenLayers.Geometry.MultiLineString"){for(var n=0;n<e.geometry.components.length;n++){var r=e.geometry.components[n];for(var i=0;i<r.components.length;i++){var s=r.components[i],o=[];if(typeof s.references=="undefined"){var u=r.components[i-1],a=r.components[i+1];for(var f=0;f<u.references.length;f++){var l=u.references[f],c=!1;for(var h=0;h<a.references.length;h++)if(a.references[h]===l){c=!0;break}if(!c)continue;var p=null;for(h=0;h<t.drawLayer.features.length;h++){var d=t.drawLayer.features[h];if(d.geometry.CLASS_NAME==="OpenLayers.Geometry.Polygon"&&d.geometry.id===l){p=d.geometry;break}}var v=p.components[0].components,m=v.length-1;for(h=0;h<m;h++){var g=h+1;if(v[h]===u&&v[g]===a){v.splice(g,0,s),o.push(p.id);break}if(v[g]===u&&v[h]===a){v.splice(g,0,s),o.push(p.id);break}}}s.references=o}}r.components[0].references.length===2&&(r.components[0].x=r.components[0].x0,r.components[0].y=r.components[0].y0);var y=r.components.length-1;r.components[y].references.length===2&&(r.components[y].x=r.components[y].x0,r.components[y].y=r.components[y].y0),t.controls.modify.deactivate(),t.controls.modify.activate(),t.controls.modify.selectFeature(e),t.controls.modify.clickout=!1,t.controls.modify.toggle=!1}this.refresh(),t.drawLayer.refresh()}},this.editLayer.updateHole=function(e){var n=e.geometry.components[0].components;if(n.length!=e.numPoints){var r=t.drawLayer.features[t.drawLayer.features.length-1];r.geometry.components[0].components=n,e.numPoints=n.length}},this.buttons=Oskari.clazz.create("Oskari.mapframework.bundle.parcel.handler.ButtonHandler",this.instance),this.buttons.start(),this.buttons.setEnabled(!1),this.basicStyle=OpenLayers.Util.applyDefaults(this.basicStyle,OpenLayers.Feature.Vector.style["default"]),this.basicStyle.fillColor="#ff0000",this.basicStyle.fillOpacity=.4,this.selectStyle=OpenLayers.Util.applyDefaults(this.selectStyle,OpenLayers.Feature.Vector.style["default"]),this.selectStyle.fillColor="#bbbb00",this.selectStyle.fillOpacity=.4,this.markerLayer=new OpenLayers.Layer.Markers("Parcel Markers Layer",{});var n=new OpenLayers.Control.SelectFeature([t.editLayer,t.drawLayer]);this._map.addControl(n),this.selectInfoControl=new OpenLayers.Control.SelectFeature(t.drawLayer),this._map.addControl(this.selectInfoControl);var r=new OpenLayers.Control.ModifyFeature(t.editLayer,{clickout:!1,toggle:!1});this._map.addControl(r),this.controls={select:n,modify:r},this.drawControls={line:new OpenLayers.Control.DrawFeature(t.drawLayer,OpenLayers.Handler.Path),area:new OpenLayers.Control.DrawFeature(t.drawLayer,OpenLayers.Handler.Polygon)},this._map.addLayers([t.drawLayer]);for(var i in this.drawControls)this._map.addControl(this.drawControls[i]);this._map.addLayers([t.editLayer]),this._map.addLayers([t.markerLayer]),this._map.setLayerIndex(t.drawLayer,10),this._map.setLayerIndex(t.editLayer,100),this._map.setLayerIndex(t.markerLayer,1e3),OpenLayers.Control.Click=OpenLayers.Class(OpenLayers.Control,{defaultHandlerOptions:{single:!0,"double":!0,pixelTolerance:10,stopSingle:!0,stopDouble:!0},initialize:function(e){this.handlerOptions=OpenLayers.Util.extend({},this.defaultHandlerOptions),OpenLayers.Control.prototype.initialize.apply(this,arguments),this.handler=new OpenLayers.Handler.Click(this,{click:this.trigger},this.handlerOptions)},trigger:function(e){var n=t._map.getLonLatFromPixel(e.xy),r=new OpenLayers.Geometry.Point(n.lon,n.lat),i,s=t.selectedFeature,o=t.drawLayer.features;for(i=0;i<o.length;i++){var u=o[i].geometry;if(u.CLASS_NAME=="OpenLayers.Geometry.Polygon"&&u.containsPoint(r)){t.selectedFeature=i,t.selectInfoControl.select(o[i]);break}i===o.length-1&&(t.selectedFeature=-2)}if(s!=t.selectedFeature){for(i=0;i<o.length;i++)t.drawLayer.features[i].style=i===t.selectedFeature?t.selectStyle:t.basicStyle;t.editLayer.redraw(),t.drawLayer.redraw()}}});var s=new OpenLayers.Control.Click;this._map.addControl(s),s.activate(),this.requestHandlers={startDrawingHandler:Oskari.clazz.create("Oskari.mapframework.bundle.parcel.request.StartDrawingRequestHandler",t),stopDrawingHandler:Oskari.clazz.create("Oskari.mapframework.bundle.parcel.request.StopDrawingRequestHandler",t),cancelDrawingHandler:Oskari.clazz.create("Oskari.mapframework.bundle.parcel.request.CancelDrawingRequestHandler",t),saveDrawingHandler:Oskari.clazz.create("Oskari.mapframework.bundle.parcel.request.SaveDrawingRequestHandler",t)},this.splitter=Oskari.clazz.create("Oskari.mapframework.bundle.parcel.split.ParcelSplit",this),this.splitter.init()},startPlugin:function(e){this._sandbox=e,e.register(this),e.addRequestHandler("Parcel.StartDrawingRequest",this.requestHandlers.startDrawingHandler),e.addRequestHandler("Parcel.StopDrawingRequest",this.requestHandlers.stopDrawingHandler),e.addRequestHandler("Parcel.CancelDrawingRequest",this.requestHandlers.cancelDrawingHandler),e.addRequestHandler("Parcel.SaveDrawingRequest",this.requestHandlers.saveDrawingHandler)},stopPlugin:function(e){var t=e.getEventBuilder("ParcelInfo.ParcelLayerUnregisterEvent")([this.getDrawingLayer(),this.getEditLayer()]);e.notifyAll(t),e.removeRequestHandler("Parcel.StartDrawingRequest",this.requestHandlers.startDrawingHandler),e.removeRequestHandler("Parcel.StopDrawingRequest",this.requestHandlers.stopDrawingHandler),e.removeRequestHandler("Parcel.CancelDrawingRequest",this.requestHandlers.cancelDrawingHandler),e.removeRequestHandler("Parcel.SaveDrawingRequest",this.requestHandlers.saveDrawingHandler),e.unregister(this),this._map=null,this._sandbox=null},getMapModule:function(){return this.mapModule},setMapModule:function(e){this.mapModule=e,this._map=e.getMap(),this.pluginName=e.getName()+"Parcel.DrawPlugin"},drawFeature:function(e,t){this.clear(),this.currentFeatureType=null;var n=this._sandbox.getEventBuilder("ParcelInfo.ParcelLayerRegisterEvent")([this.getDrawingLayer(),this.getEditLayer()]);this._sandbox.notifyAll(n);var r=[];for(var i=0;i<e.length;i++)r.push(e[i].geometry);var s=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.MultiPolygon(r));s.attributes=e[0].attributes,this.drawLayer.addFeatures([s]),this.currentFeatureType=t,this._map.zoomToExtent(this.drawLayer.getDataExtent()),this.buttons.setEnabled(!0)},startDrawing:function(e){this.toggleControl(e.drawMode)},finishSketchDraw:function(){try{this.drawControls[this.currentDrawMode].finishSketch(),this.toggleControl()}catch(e){var t=this._sandbox.getEventBuilder("Parcel.ParcelSelectedEvent")();this._sandbox.notifyAll(t)}},cancelDrawing:function(){this.toggleControl()},saveDrawing:function(){if(this.selectedFeature>-2){var e=this.getDrawing();this.controls.select.select(e),this.toggleControl();var t=this._sandbox.getEventBuilder("Parcel.SaveDrawingEvent")(e);this._sandbox.notifyAll(t)}},toggleControl:function(e){this.currentDrawMode=e;for(var t in this.drawControls){var n=this.drawControls[t];e==t?n.activate():n.deactivate()}},getDrawingLayer:function(){return this.drawLayer},getEditLayer:function(){return this.editLayer},getMarkerLayer:function(){return this.markerLayer},getDrawing:function(){return this.selectedFeature>-1?this.drawLayer.features[this.selectedFeature]:this.drawLayer.features[0]},getParcelGeometry:function(){if(this.drawLayer.features.length===0)return null;var e=0;return this.selectedFeature>-1&&(e=this.selectedFeature),this.drawLayer.features[e].geometry},getBoundaryGeometry:function(){return this.editLayer.features.length===0?null:this.editLayer.features[0].geometry},setFeatureType:function(e){this.currentFeatureType=e},getFeatureType:function(){return this.currentFeatureType},getSandbox:function(){return this._sandbox},start:function(e){},stop:function(e){var t=e.getEventBuilder("ParcelInfo.ParcelLayerUnregisterEvent")([this.getDrawingLayer(),this.getEditLayer()]);e.notifyAll(t)},register:function(){},unregister:function(){},clear:function(){this.controls.modify.deactivate(),this.drawLayer.removeAllFeatures(),this.editLayer.removeAllFeatures();var e=this.markerLayer.markers.length-1;for(var t=e;t>=0;t--)this.markerLayer.markers[t].destroy();this.markerLayer.markers=[],this._map.activeMarker=null,this.splitSelection=!1,this.instance.getService().clearParcelMap()},splitFeature:function(e){var t=typeof e=="undefined"?!1:e,n=this.splitter.split(t);if(n!=undefined){this.buttons.setButtonEnabled("line",!1),this.buttons.setButtonEnabled("area",!1),this.buttons.setButtonEnabled("selector",!1),this.buttons.setButtonEnabled("save",!0),this.controls.select.select(n),this.controls.modify.selectFeature(n),this.controls.modify.activate(),this.controls.modify.clickout=!1,this.controls.modify.toggle=!1;var r=Math.max(this._map.Z_INDEX_BASE.Feature,this.markerLayer.getZIndex())+1;this.markerLayer.setZIndex(r),this.updateInfobox(),jQuery("svg").find("circle").css("cursor","move"),jQuery("div.olMapViewport").find("oval").css("cursor","move")}},updateInfobox:function(){if(this.selectedFeature>-1)this.selectInfoControl.select(this.drawLayer.features[this.selectedFeature]);else{var e=this.drawLayer.features;if(e){this.selectedFeature=0;for(i=0;i<e.length;i++)this.drawLayer.features[i].style=i===this.selectedFeature?this.selectStyle:this.basicStyle;this.drawLayer.redraw(),this.selectInfoControl.select(this.drawLayer.features[this.selectedFeature])}}}},{protocol:["Oskari.mapframework.module.Module","Oskari.mapframework.ui.module.common.mapmodule.Plugin"]}),define("bundles/framework/bundle/parcel/plugin/DrawPlugin",function(){}),Oskari.clazz.define("Oskari.mapframework.parcel.request.SaveDrawingRequest",function(){},{getName:function(){return"Parcel.SaveDrawingRequest"}},{protocol:["Oskari.mapframework.request.Request"]}),define("bundles/framework/bundle/parcel/request/SaveDrawingRequest",function(){}),Oskari.clazz.define("Oskari.mapframework.parcel.request.StopDrawingRequest",function(){},{getName:function(){return"Parcel.StopDrawingRequest"}},{protocol:["Oskari.mapframework.request.Request"]}),define("bundles/framework/bundle/parcel/request/StopDrawingRequest",function(){}),Oskari.clazz.define("Oskari.mapframework.parcel.request.CancelDrawingRequest",function(){},{getName:function(){return"Parcel.CancelDrawingRequest"}},{protocol:["Oskari.mapframework.request.Request"]}),define("bundles/framework/bundle/parcel/request/CancelDrawingRequest",function(){}),Oskari.clazz.define("Oskari.mapframework.bundle.parcel.request.StartDrawingRequest",function(e){if(!this.drawModes[e.drawMode])throw"Unknown draw mode '"+e.drawMode+"'";this._drawMode=e.drawMode},{getName:function(){return"Parcel.StartDrawingRequest"},drawModes:{point:"point",line:"line",area:"area",box:"box"},getDrawMode:function(){return this._drawMode}},{protocol:["Oskari.mapframework.request.Request"]}),define("bundles/framework/bundle/parcel/request/StartDrawingRequest",function(){}),Oskari.clazz.define("Oskari.mapframework.bundle.parcel.request.SaveDrawingRequestHandler",function(e){this.drawPlugin=e},{handleRequest:function(e,t){this.drawPlugin.saveDrawing()}},{protocol:["Oskari.mapframework.core.RequestHandler"]}),define("bundles/framework/bundle/parcel/request/SaveDrawingRequestHandler",function(){}),Oskari.clazz.define("Oskari.mapframework.bundle.parcel.request.StopDrawingRequestHandler",function(e){this.drawPlugin=e},{handleRequest:function(e,t){this.drawPlugin.finishSketchDraw()}},{protocol:["Oskari.mapframework.core.RequestHandler"]}),define("bundles/framework/bundle/parcel/request/StopDrawingRequestHandler",function(){}),Oskari.clazz.define("Oskari.mapframework.bundle.parcel.request.CancelDrawingRequestHandler",function(e){this.drawPlugin=e},{handleRequest:function(e,t){this.drawPlugin.cancelDrawing()}},{protocol:["Oskari.mapframework.core.RequestHandler"]}),define("bundles/framework/bundle/parcel/request/CancelDrawingRequestHandler",function(){}),Oskari.clazz.define("Oskari.mapframework.bundle.parcel.request.StartDrawingRequestHandler",function(e){this.drawPlugin=e},{handleRequest:function(e,t){var n=t.getDrawMode();this.drawPlugin.startDrawing({drawMode:t.getDrawMode()})}},{protocol:["Oskari.mapframework.core.RequestHandler"]}),define("bundles/framework/bundle/parcel/request/StartDrawingRequestHandler",function(){}),Oskari.clazz.define("Oskari.mapframework.bundle.parcel.model.PreParcel",function(){this.id=undefined,this.uuid=undefined,this.kvp_uid=undefined,this.preparcel_id=undefined,this.title=undefined,this.subtitle=undefined,this.description=undefined,this.parent_property_id=undefined,this.parent_property_quality=undefined,this.reporter=undefined,this.area=0,this.area_unit=undefined},{setId:function(e){this.id=e},getId:function(){return this.id},setUuid:function(e){this.uuid=e},getUuid:function(){return this.uuid},setKvp_uid:function(e){this.uuid=e},getKvp_uid:function(){return this.kvp_uid},setPreparcel_id:function(e){this.preparcel_id=e},getPreparcel_id:function(){return this.preparcel_id},setTitle:function(e){this.title=e},getTitle:function(){return this.title},setSubtitle:function(e){this.subtitle=e},getSubtitle:function(){return this.subtitle},setDescription:function(e){this.description=e},getDescription:function(){return this.description},setParent_property_id:function(e){this.parent_property_id=e},getParent_property_id:function(){return this.parent_property_id},setParent_property_quality:function(e){this.parent_property_quality=e},getParent_property_quality:function(){return this.parent_property_quality},setReporter:function(e){this.reporter=e},getReporter:function(){return this.reporter},setArea:function(e){this.area=e},getArea:function(){return this.area},setArea_unit:function(e){this.area_unit=e},getArea_unit:function(){return this.area_unit}}),define("bundles/framework/bundle/parcel/model/PreParcel",function(){}),Oskari.clazz.define("Oskari.mapframework.bundle.parcel.model.PreParcelData",function(){this.id=undefined,this.preparcel_id=undefined,this.uuid=undefined,this.geom_type=undefined,this.geometry=undefined,this.created=undefined,this.updated=undefined},{setId:function(e){this.id=e},getId:function(){return this.id},setPreparcel_id:function(e){this.preparcel_id=e},getPreparcel_id:function(){return this.preparcel_id},setUuid:function(e){this.uuid=e},getUuid:function(){return this.uuid},setGeom_type:function(e){this.geom_type=e},getGeom_type:function(){return this.geom_type},setGeometry:function(e){this.geometry=e},getGeometry:function(){return this.geometry},setCreated:function(e){this.created=e},getCreated:function(){return this.created},setUpdated:function(e){this.updated=e},getUpdated:function(){return this.updated}}),define("bundles/framework/bundle/parcel/model/PreParcelData",function(){}),Oskari.clazz.define("Oskari.mapframework.bundle.parcel.service.ParcelService",function(e){this._instance=e,this._preParcelsList=[],this._preParcelDataList=[],this._wfst=Oskari.clazz.create("Oskari.mapframework.bundle.parcel.service.ParcelWfst",e),this._wfst2=Oskari.clazz.create("Oskari.mapframework.bundle.parcel.service.PreParcelWFSTStore",e),this._plot=Oskari.clazz.create("Oskari.mapframework.bundle.parcel.service.ParcelPlot",e),this.kvp_uid="12345"},{getQName:function(){return"Oskari.mapframework.bundle.parcel.service.ParcelService"},getName:function(){return"ParcelService"},init:function(){this._wfst2.connect()},loadParcel:function(e,t){this._wfst.loadParcel(e,t)},loadRegisterUnit:function(e,t){this._wfst.loadRegisterUnit(e,t)},printPlace:function(e,t,n,r,i){e&&t?t===this._instance.conf.parcelFeatureType?this._plotParcel(e,n,r,i):t===this._instance.conf.registerUnitFeatureType?this._plotParcel(e,n,r,i):i():i()},_plotParcel:function(e,t,n,r){e&&this._plot.plotParcel(e,t,n,r)},savePlace:function(e,t,n){var r=this,i=!t.id,s=e.getDrawing(),o=function(s,o){i&&s?r.savePlaceData(e,t,o,n):o.length<1&&(s=!1),n(s,o[0],i)};s&&this._wfst2.commitPreParcel(this.getPreParcelFromFormValues(t),o)},savePlaceData:function(e,t,n,r){var i=this,s=!t.id,o=e.getDrawing();o&&this._wfst2.commitPreParcelData(this.getPreParcelData(n,e),r)},getPreParcelFromFormValues:function(e){var t=[],n=Oskari.clazz.create("Oskari.mapframework.bundle.parcel.model.PreParcel");return n.setKvp_uid(this.kvp_uid),n.setPreparcel_id(e.name),n.setTitle(e.title),n.setSubtitle(e.subtitle),n.setDescription(e.desc),n.setParent_property_id(e.parent_property_id),n.setParent_property_quality(e.parent_property_quality),n.setReporter(e.reporter),n.setArea(e.area),n.setArea_unit("m2"),t.push(n),t},getPreParcelData:function(e,t){var n=[],r=Oskari.clazz.create("Oskari.mapframework.bundle.parcel.model.PreParcelData");e&&r.setPreparcel_id(e[0].id),r.setGeom_type("parcel"),r.setUuid(this.kvp_uid),r.setGeometry(t.getParcelGeometry()),n.push(r);var i=Oskari.clazz.create("Oskari.mapframework.bundle.parcel.model.PreParcelData");return e&&i.setPreparcel_id(e[0].id),i.setGeom_type("boundary"),i.setUuid(this.kvp_uid),i.setGeometry(t.getBoundaryGeometry()),n.push(i),n},loadPreParcel:function(e,t){var n=this,r=!1,i=function(){r},s=function(e){e&&(n._preParcelsList=e),r=!0,i()};this._wfst2.getPreParcels(this.kvp_uid,s)},loadPreParcelData:function(e,t,n){var r=this,i=!1,s=function(){i},o=function(e){e&&(r._preParcelDataList=e),i=!0,s()};this._wfst2.getPreParcelData(e,o)},clearParcelMap:function(){this._plot.clearParcelMap()},saveRegisterUnit:function(e,t,n,r){e}},{protocol:["Oskari.mapframework.service.Service"]}),define("bundles/framework/bundle/parcel/service/ParcelService",function(){}),Oskari.clazz.define("Oskari.mapframework.bundle.parcel.service.ParcelWfst",function(e){this.instance=e,this.protocols={},this.protocols.parcel=new OpenLayers.Protocol.WFS({version:"1.1.0",srsName:"EPSG:3067",featureType:e.conf.parcelFeatureType,featureNS:"http://xml.nls.fi/ktjkiiwfs/2010/02",featurePrefix:"ktjkiiwfs",url:e.conf.queryUrl}),this.protocols.registerUnit=new OpenLayers.Protocol.WFS({version:"1.1.0",srsName:"EPSG:3067",featureType:e.conf.registerUnitFeatureType,featureNS:"http://xml.nls.fi/ktjkiiwfs/2010/02",featurePrefix:"ktjkiiwfs",url:e.conf.queryUrl});var t=e.conf.transactionUrl||e.conf.queryUrl;this.protocols.parcelCommit=new OpenLayers.Protocol.WFS({version:"1.1.0",srsName:"EPSG:3067",featureType:this.instance.conf.parcelFeatureType,featureNS:"http://xml.nls.fi/ktjkiiwfs/2010/02",featurePrefix:"ktjkiiwfs",url:t}),this.protocols.registerUnitCommit=new OpenLayers.Protocol.WFS({version:"1.1.0",srsName:"EPSG:3067",featureType:this.instance.conf.registerUnitFeatureType,featureNS:"http://xml.nls.fi/ktjkiiwfs/2010/02",featurePrefix:"ktjkiiwfs",url:t})},{loadParcel:function(e,t){this._downloadFeature(e,this.protocols.parcel,t)},loadRegisterUnit:function(e,t){this._downloadFeature(e,this.protocols.registerUnit,t)},saveParcel:function(e,t,n,r){this._commitFeature(e,t,n,this.protocols.parcelCommit,r)},saveRegisterUnit:function(e,t,n,r){},_downloadFeature:function(e,t,n){var r=this,i;if(e.indexOf("-")===-1)i=e;else{var s,o;i="";var u=e.split("-");if(u.length!==4)return;for(s=0;s<2;s++){for(o=0;o<3-u[s].length;o++)i=i.concat("0");for(o=0;o<u[s].length;o++)i=i.concat(u[s].charAt(o))}for(s=2;s<4;s++){for(o=0;o<4-u[s].length;o++)i=i.concat("0");for(o=0;o<u[s].length;o++)i=i.concat(u[s].charAt(o))}}var a=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.EQUAL_TO,property:"ktjkiiwfs:kiinteistotunnus",value:i}),f=this.instance.getLocalization("notification").placeLoading,l=Oskari.clazz.create("Oskari.userinterface.component.Popup");l.show(f.title,f.message),t.read({filter:a,callback:function(e){l.close();if(e&&e.features&&e.features.length>0)n(e.features);else{var t=r.instance.getLocalization("notification").error;r.instance.showMessage(t.title,t.loadPlace),n()}}})},_commitFeature:function(e,t,n,r,i){var s=this;if(e.attributes){t&&(e.attributes.nimi=t);if(n||typeof n=="string")e.attributes.kuvaus=n}var o=e.state;this.instance.conf.transactionUrl&&this.instance.conf.queryUrl!=this.instance.conf.transactionUrl?e.toState(OpenLayers.State.INSERT):(e.toState(OpenLayers.State.UPDATE),e.state=OpenLayers.State.UPDATE),e.fid=s._parseFidNumber(e.fid);var u=Oskari.clazz.create("Oskari.userinterface.component.Popup"),a=this.instance.getLocalization("notification").placeAdding;u.show(a.title,a.message),r.commit([e],{callback:function(t){u.close(),e.state=o;var n=t&&!t.error;if(!n){var r=s.instance.getLocalization("notification").error;s.instance.showMessage(r.title,r.savePlace)}i(n)}})},_parseFidNumber:function(e){var t=e;return t&&typeof t=="string"&&t.length>0&&!isNaN(t.substr(length-1))&&(t=parseInt(t.match(/(\d+)$/)[0],10)),t}}),define("bundles/framework/bundle/parcel/service/ParcelWfst",function(){}),Oskari.clazz.define("Oskari.mapframework.bundle.parcel.service.PreParcelWFSTStore",function(e){this.instance=e;var t=e.conf;this.featureNS=(t?t.wfstFeatureNS:null)||"http://www.oskari.org";var n=e.getSandbox().getUser();this.uuid=n.getUuid(),this.protocols={},this.url=t.wfstUrl,this.featureNS=(t?t.wfstFeatureNS:null)||"http://www.oskari.org"},{connect:function(){var e=this.url;this.protocols.preparcel=new OpenLayers.Protocol.WFS({version:"1.1.0",srsName:"EPSG:3067",featureType:"preparcel",featureNS:this.featureNS,url:e}),this.protocols.preparcel_data=new OpenLayers.Protocol.WFS({version:"1.1.0",srsName:"EPSG:3067",geometryName:"geometry",featureType:"preparcel_data",featureNS:this.featureNS,url:e})},getPreParcels:function(e,t){var n=typeof e!="undefined"?e:this.uuid,r=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.EQUAL_TO,property:"kvp_uid",value:n}),i=this.protocols.preparcel,s=this;i.read({filter:r,callback:function(e){s._handlePreParcelResponse(e,t)}})},_handlePreParcelResponse:function(e,t){var n=this.uuid,r=e.features;if(r==null||r.length==0){t&&t();return}var i=[];for(var s=0;s<r.length;s++){var o=r[s],u=o.attributes,a=this._parseNumericId(o.fid),f=Oskari.clazz.create("Oskari.mapframework.bundle.parcel.model.PreParcel");f.setId(a),f.setUuid(u.uuid),f.setKvp_uid(u.kvp_uid),f.setPreparcel_id(u.preparcel_id),f.setTitle(u.title),f.setSubtitle(u.subtitle),f.setDescription(u.description),f.setParent_property_id(u.parent_property_id),f.setParent_property_quality(u.parent_property_quality),f.setReporter(u.reporter),f.setArea(u.area),f.setArea_unit(u.area_unit),i.push(f)}t&&t(i)},savePreParcelSet:function(e,t,n){this.commitPreParcel([e],n)},commitPreParcel:function(e,t){var n=this.uuid,r="12345",i=this.protocols.preparcel,s=this,o=[];for(var u=0;u<e.length;u++){var a=e[u],f=a.getId(),l={uuid:n,kvp_uid:r,preparcel_id:a.getPreparcel_id(),title:a.getTitle(),subtitle:a.getSubtitle(),description:a.getDescription(),parent_property_id:a.getParent_property_id(),parent_property_quality:a.getParent_property_quality(),reporter:a.getReporter(),area:a.getArea(),area_unit:a.getArea_unit()},c=new OpenLayers.Feature.Vector(null,l);f?(c.fid=i.featureType+"."+f,c.state=OpenLayers.State.UPDATE):c.toState(OpenLayers.State.INSERT),o.push(c)}i.commit(o,{callback:function(n){s._handleCommitPreParcelResponse(n,e,t)}})},_handleCommitPreParcelResponse:function(e,t,n){if(e.success()){var r=e.reqFeatures,i,s,o=[],u=e.insertIds||[];for(var a=0,f=r.length;a<f;++a){s=r[a],i=s.state;if(i){if(i==OpenLayers.State.INSERT){s.fid=u[a],s.attributes.id=s.fid;var l=this._parseNumericId(s.fid);t[a].setId(l)}s.state=null}}n(!0,t)}else n(!1,t)},deletePreParcel:function(e,t){var n=this.protocols.preparcel,r=this.uuid,i=[];for(var s=0;s<e.length;s++){var o=e[s];if(!o)continue;var u={uuid:r},a=new OpenLayers.Feature.Vector(null,u);a.fid=n.featureType+"."+o,a.state=OpenLayers.State.DELETE,i.push(a)}var f=this;n.commit(i,{callback:function(n){f._handleDeletePreParcelResponse(n,e,t)}})},_handleDeletePreParcelResponse:function(e,t,n){e.success()?n(!0,t):n(!1,t)},_parseNumericId:function(e){var t=e.split(".")[1];return t},getPreParcelData:function(e,t){var n=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.EQUAL_TO,property:"preparcel_id",value:e}),r=this.protocols.preparcel_data,i=this;r.read({filter:n,callback:function(e){i._handlePreParcelDataResponse(e,t)}})},_handlePreParcelDataResponse:function(e,t){var n=this.uuid,r=[],i=e.features;if(i==null||i.length==0||jQuery.isEmptyObject(i)){t&&t(r);return}for(var s=0;s<i.length;s++){var o=i[s],u=o.attributes,a=this._parseNumericId(o.fid),f=Oskari.clazz.create("Oskari.mapframework.bundle.parcel.model.PreParcelData");f.setId(a),f.setPreparcel_id(u.preparcel_id),f.setGeom_type(u.geom_type),f.setCreated(u.created),f.setGeometry(o.geometry),f.setUpdated(u.updated),f.setUuid(u.uuid),r.push(f)}t&&t(r)},commitPreParcelData:function(e,t){var n=this.protocols.preparcel_data,r=this.uuid,i=[];for(var s=0;s<e.length;s++){var o=e[s],u=o.getId(),a=o.getGeometry(),f={geom_type:o.getGeom_type(),preparcel_id:o.getPreparcel_id(),uuid:o.getUuid()},l=new OpenLayers.Feature.Vector(a,f);u?(l.fid=n.featureType+"."+u,l.state=OpenLayers.State.UPDATE):l.toState(OpenLayers.State.INSERT),i.push(l)}var c=this;n.commit(i,{callback:function(n){c._handleCommitPreParcelDataResponse(n,e,t)}})},_handleCommitPreParcelDataResponse:function(e,t,n){if(e.success()){var r=e.reqFeatures,i,s,o=[],u=e.insertIds||[],a=[];for(var f=0,l=r.length;f<l;++f){s=r[f],i=s.state;if(i){if(i==OpenLayers.State.INSERT){s.fid=u[f],s.attributes.id=s.fid;var c=this._parseNumericId(s.fid);a.push(c)}else a.push(t[f].getId());s.state=null}}n(!0,t)}else n(!1,t)},deletePreParcelData:function(e,t){var n=this.protocols.preparcel_data,r=this.uuid,i=[];for(var s=0;s<e.length;s++){var o=e[s];if(!o)continue;var u={uuid:r},a=new OpenLayers.Feature.Vector(null,u);a.fid=n.featureType+"."+o,a.state=OpenLayers.State.DELETE,i.push(a)}var f=this;n.commit(i,{callback:function(n){f._handleDeletePreParcelDataResponse(n,e,t)}})},_handleDeletePreParcelDataResponse:function(e,t,n){e.success()?n(!0,t):n(!1,t)},disconnect:function(){}}),define("bundles/framework/bundle/parcel/service/PreParcelWFSTStore",function(){}),Oskari.clazz.define("Oskari.mapframework.bundle.parcel.service.ParcelPlot",function(e){this.instance=e,this.parcelLayer=null,this.boundaryLayer=null,this.pointLayer=null,this._map=null;var t=new OpenLayers.StyleMap({"default":{strokeColor:"#00FF00",strokeOpacity:1,strokeWidth:0,fillColor:"#FF0000",fillOpacity:.2,labelAlign:"bm",label:"${nimi}\n${area} ha",fontColor:"#000000",fontSize:"22px",fontFamily:"SansSerif",fontWeight:"bold"}});this.parcelLayer=new OpenLayers.Layer.Vector("NewParcel",{styleMap:t});var n=new OpenLayers.StyleMap({"default":{strokeColor:"#FF0000",strokeOpacity:1,strokeWidth:2,strokeDashstyle:"dash",fillColor:"#FF0000",fillOpacity:1,label:"- ${length} -",labelAlign:"cm",labelXOffset:"${deltax}",labelYOffset:"${deltay}"}});this.boundaryLayer=new OpenLayers.Layer.Vector("NewBoundary",{styleMap:n});var r=new OpenLayers.StyleMap({"default":{strokeColor:"#FF0000",strokeOpacity:1,strokeWidth:1,fillColor:"#FF0000",fillOpacity:.5,pointRadius:6,label:"${pnro}",graphicName:"triangle",labelXOffset:10,labelYOffset:10,fontFamily:"Arial",fontSize:"12px"}});this.pointLayer=new OpenLayers.Layer.Vector("NewPoints",{styleMap:r})},{plotParcel:function(e,t,n,r){this._plotNewParcel(e,t,n,r),this._plotNewBoundary(e,r),r(!0),this._createGeoJSON(),this.instance.sandbox.postRequestByName("userinterface.UpdateExtensionRequest",[undefined,"attach","Printout"])},clearParcelMap:function(){this.parcelLayer&&this.parcelLayer.removeAllFeatures(),this.boundaryLayer&&this.boundaryLayer.removeAllFeatures(),this.pointLayer&&this.pointLayer.removeAllFeatures()},_plotNewParcel:function(e,t,n,r){var i=this,s=[];for(var o=0;o<e.geometry.components.length;o++)s.push(e.geometry.components[o]);var u=new OpenLayers.Geometry.Polygon(s),a=new OpenLayers.Feature.Vector(u);if(a.attributes){t&&(a.attributes.nimi=t);if(n||typeof n=="string")a.attributes.kuvaus=n}if(a){var f=this.instance.getDrawPlugin();f.getMap().getLayerIndex(this.parcelLayer)==-1&&(f.getMap().addLayer(this.parcelLayer),f.getMap().setLayerIndex(this.parcelLayer,1001)),this.parcelLayer.removeAllFeatures();var l=a.geometry.getArea()/1e4;a.attributes.area=l.toFixed(2),a.style=this.parcelLayer.style;var c=[a];this.parcelLayer.addFeatures(c),f.drawLayer.removeAllFeatures(),this.parcelLayer.redraw()}},_plotNewBoundary:function(e,t){var n=this,r=[],i=[],s=this.instance.getDrawPlugin();s.getMap().getLayerIndex(this.boundaryLayer)==-1&&(s.getMap().addLayer(this.boundaryLayer),s.getMap().setLayerIndex(this.boundaryLayer,1002)),s.getMap().getLayerIndex(this.pointLayer==-1)&&(s.getMap().addLayer(this.pointLayer),s.getMap().setLayerIndex(this.pointLayer,1003)),this.boundaryLayer.removeAllFeatures(),this.pointLayer.removeAllFeatures();var o=1,u=s.editLayer.features[0];if(u!==null&&u!==undefined){for(var a=0;a<u.geometry.components.length;a++){var f=u.geometry.components[a],l=f.getVertices();for(var c=0;c<l.length-1;c++){var h=l[c].x,p=l[c].y,d=l[c+1].x,v=l[c+1].y,m=new OpenLayers.LonLat(h,p),g=s._map.getPixelFromLonLat(m),y=new OpenLayers.LonLat(d,v),b=s._map.getPixelFromLonLat(y),w=(b.x+g.x)/2-g.x,E=(b.y+g.y)/2-g.y,S=new Array(new OpenLayers.Geometry.Point(h,p),new OpenLayers.Geometry.Point(d,v)),x=new OpenLayers.Geometry.LineString(S),T=new OpenLayers.Feature.Vector(x,null,this.boundaryLayer.style);T.attributes.length=T.geometry.getLength().toFixed(2),T.attributes.deltax=w,T.attributes.deltay=-E,r.push(T);var N=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(h,p),null,this.pointLayer.style);N.attributes.pnro=o++,i.push(N);if(c==l.length-2){var N=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(d,v),null,this.pointLayer.style);N.attributes.pnro=o++,i.push(N)}}if(f.CLASS_NAME=="OpenLayers.Geometry.Polygon"||f.CLASS_NAME=="OpenLayers.Geometry.LinearRing"){var h=l[l.length-1].x,p=l[l.length-1].y,d=l[0].x,v=l[0].y,m=new OpenLayers.LonLat(h,p),g=s._map.getPixelFromLonLat(m),y=new OpenLayers.LonLat(d,v),b=s._map.getPixelFromLonLat(y),w=(b.x+g.x)/2-g.x,E=(b.y+g.y)/2-g.y,S=new Array(new OpenLayers.Geometry.Point(h,p),new OpenLayers.Geometry.Point(d,v)),x=new OpenLayers.Geometry.LineString(S),T=new OpenLayers.Feature.Vector(x,null,this.boundaryLayer.style);T.attributes.length=T.geometry.getLength().toFixed(2),T.attributes.deltax=w,T.attributes.deltay=-E,r.push(T)}}i.length>0&&(this.pointLayer.addFeatures(i),this.pointLayer.redraw()),r.length>0&&(this.boundaryLayer.addFeatures(r),this.boundaryLayer.redraw())}s.getEditLayer().removeAllFeatures(),s.getMarkerLayer().clearMarkers()},_createGeoJSON:function(){var e=new OpenLayers.Format.GeoJSON,t=[],n=JSON.parse(e.write(this.parcelLayer.features)),r={type:"geojson",name:this.parcelLayer.name,id:this.parcelLayer.name,data:{type:"FeatureCollection",features:n.features},styles:[]};r.styles.push(this._getDefaultStyle(this.parcelLayer.styleMap)),t.push(r);var i=JSON.parse(e.write(this.boundaryLayer.features)),r={type:"geojson",name:this.boundaryLayer.name,id:this.boundaryLayer.name,data:{type:"FeatureCollection",features:i.features},styles:[]};r.styles.push(this._getDefaultStyle(this.boundaryLayer.styleMap)),t.push(r);var s=JSON.parse(e.write(this.pointLayer.features)),r={type:"geojson",name:this.pointLayer.name,id:this.pointLayer.name,data:{type:"FeatureCollection",features:s.features},styles:[]};r.styles.push(this._getDefaultStyle(this.pointLayer.styleMap)),t.push(r);var o=this.instance.sandbox.getEventBuilder("Printout.PrintableContentEvent");if(o){var u=o(this.instance.getName(),null,null,t);this.instance.sandbox.notifyAll(u)}},_getDefaultStyle:function(e){var t=e.styles["default"].defaultStyle,n=e.styles["default"].id,r={title:"Standard",name:n,styleMap:{"default":{}}};return r.styleMap["default"]=this._cleanStyle(t,["labelXOffset","labelYOffset"]),r},_cleanStyle:function(e,t){var n=jQuery.extend(!0,{},e);for(var r=0;r<t.length;r++){var i=t[r];n[i]&&n[i].toString().indexOf("${delta")>-1&&delete n[i]}return n}}),define("bundles/framework/bundle/parcel/service/ParcelPlot",function(){}),Oskari.clazz.define("Oskari.mapframework.bundle.parcel.split.ParcelSplit",function(e){this.drawPlugin=e,this.intersectionPoints=[],this.markerSize=new OpenLayers.Size(21,25),this.markerOffset=new OpenLayers.Pixel(-(this.markerSize.w/2),-this.markerSize.h),this.markerIcon=new OpenLayers.Icon("/Oskari/resources/parcel/images/marker.png",this.markerSize,this.markerOffset),this.splitPolygons=[],this.map=this.drawPlugin.getMapModule().getMap(),this.map.activeMarker=null},{init:function(){},split:function(e){var t=this;if(this.drawPlugin.splitSelection)return;var n=this.drawPlugin.drawLayer,r=this.drawPlugin.editLayer,i={};this.map.moveActiveMarker=function(e){var i=this.getLonLatFromPixel(new OpenLayers.Pixel(e.xy.x,e.xy.y));i.lon-=this.activeMarker.markerMouseOffset.lon,i.lat-=this.activeMarker.markerMouseOffset.lat;var s=this.activeMarkerProjection(i);this.activeMarker.lonlat=s.lonlat,this.activeMarker.reference.point.x=this.activeMarker.lonlat.lon,this.activeMarker.reference.point.x0=this.activeMarker.lonlat.lon,this.activeMarker.reference.point.y=this.activeMarker.lonlat.lat,this.activeMarker.reference.point.y0=this.activeMarker.lonlat.lat,s.p.length>0&&t.updatePolygons(s.p,s.p0),r.updateLine(),r.redraw(),n.redraw(),t.drawPlugin.updateInfobox(),this.getLayersByName("Parcel Markers Layer")[0].redraw(),OpenLayers.Event.stop(e)},this.map.freezeActiveMarker=function(e){this.events.unregister("mousemove",this,this.moveActiveMarker),this.events.unregister("mouseup",this,this.freezeActiveMarker),OpenLayers.Event.stop(e);var i=this.getLonLatFromPixel(new OpenLayers.Pixel(e.xy.x,e.xy.y));i.lon-=this.activeMarker.markerMouseOffset.lon,i.lat-=this.activeMarker.markerMouseOffset.lat;var s=this.activeMarkerProjection(i);this.activeMarker.lonlat=s.lonlat,this.activeMarker.reference.point.x=this.activeMarker.lonlat.lon,this.activeMarker.reference.point.x0=this.activeMarker.lonlat.lon,this.activeMarker.reference.point.y=this.activeMarker.lonlat.lat,this.activeMarker.reference.point.y0=this.activeMarker.lonlat.lat,r.updateLine(),r.redraw(),n.redraw(),t.drawPlugin.updateInfobox(),jQuery("svg").find("circle").css("cursor","move"),jQuery("div.olMapViewport").find("oval").css("cursor","move")},this.map.pointProjection=function(e,t,n){var r=function(e,t){return e.x*t.x+e.y*t.y},i=n.x-t.x,s=n.y-t.y,o=e.x*(n.x-t.x)+e.y*(n.y-t.y),u=t.y-n.y,a=n.x-t.x,f=t.y*(n.x-t.x)-t.x*(n.y-t.y),l={x:-(o*a-s*f)/(s*u-i*a),y:(o*u-i*f)/(s*u-i*a)},c={x:n.x-t.x,y:n.y-t.y},h={x:n.x-l.x,y:n.y-l.y},p=r(c,h),d=r(c,c);return p<0?(l.x=n.x,l.y=n.y):p>d&&(l.x=t.x,l.y=t.y),isNaN(l.x)||isNaN(l.y)?t:l},this.map.distance=function(e,t){var n,r=function(t){return!isNaN(parseFloat(t))&&isFinite(t)};if(r(e.lon))n=e.lon;else if(r(e.x))n=e.x;else{if(!r(e[0]))return null;n=e[0]}var i;if(r(e.lat))i=e.lat;else if(r(e.y))i=e.y;else{if(!r(e[1]))return null;i=e[1]}var s;if(r(t.lon))s=t.lon;else if(r(t.x))s=t.x;else{if(!r(t[0]))return null;s=t[0]}var o;if(r(t.lat))o=t.lat;else if(r(t.y))o=t.y;else{if(!r(t[1]))return null;o=t[1]}return Math.sqrt(Math.pow(s-n,2)+Math.pow(o-i,2))},this.map.activeMarkerProjection=function(e){var t={lonlat:null,p:[],p0:[]},n=this.getLayersByName("Parcel Draw Layer")[0],r={x:e.lon,y:e.lat},i=[],s=[],o=this.activeMarker.reference.segments,u=0;for(var a=0;a<o.polygons.length;a++)for(var f=0;f<o.p[a].length;f++){var l=[o.p[a][f][0],o.p[a][f][1]];if(!l[0].boundaryPoint||!l[1].boundaryPoint)continue;var c={x:l[0].x,y:l[0].y},h={x:l[1].x,y:l[1].y};i.push(this.pointProjection(r,c,h));var p=i.length-1;s.push(this.distance(r,i[p]));if(s[p]<s[u]||t.lonlat===null)u=p,t.lonlat=new OpenLayers.LonLat(i[u].x,i[u].y),f===0?(t.p0=[],t.p=[]):(t.p0=o.p[a][0],t.p=o.p[a][f])}return t},this.drawPlugin.splitSelection=!0;var s=n.features[0];if(s.geometry.CLASS_NAME!=="OpenLayers.Geometry.MultiPolygon")return;this.drawPlugin.backupFeatures=[s.clone()],i=n.features[0].attributes;if(e){var o=this.drawPlugin.backupFeatures[0].geometry.components;this.drawPlugin.drawLayer.removeAllFeatures(),this.drawPlugin.editLayer.removeAllFeatures();for(var u=0;u<o.length;u++)this.drawPlugin.drawLayer.addFeatures(new OpenLayers.Feature.Vector(this.drawPlugin.backupFeatures[0].geometry.components[u])),this.drawPlugin.drawLayer.features[u].style=this.drawPlugin.basicStyle;return this.drawPlugin.drawLayer.features[0].style=this.drawPlugin.selectStyle,this.drawPlugin.selectedFeature=0,n.redraw(),r.redraw(),null}var a=n.features.length-1;if(a<1)return;var f=n.features[a];switch(f.geometry.CLASS_NAME){case"OpenLayers.Geometry.Polygon":this.splitHole(s,f);for(var u=0;u<this.drawPlugin.drawLayer.features.length;u++)this.drawPlugin.drawLayer.features[u].attributes={name:i.tekstiKartalla,quality:i.lahdeaineisto};break;case"OpenLayers.Geometry.LineString":var l=this.splitLine(s,f);this.drawPlugin.drawLayer.removeAllFeatures();for(var u=0;u<l[0].geometry.components.length;u++)this.drawPlugin.drawLayer.addFeatures(new OpenLayers.Feature.Vector(l[0].geometry.components[u])),this.drawPlugin.drawLayer.features[u].style=this.drawPlugin.basicStyle,this.drawPlugin.drawLayer.features[u].attributes={name:i.tekstiKartalla,quality:i.lahdeaineisto};this.drawPlugin.editLayer.addFeatures(l[1])}return OpenLayers.Feature.Vector.style["default"].strokeWidth="2",this.drawPlugin.drawLayer.features[0].style=this.drawPlugin.selectStyle,this.drawPlugin.selectedFeature=0,n.redraw(),r.redraw(),r.features[0]},splitHole:function(e,t){var n=this.drawPlugin.drawLayer,r=this.drawPlugin.editLayer,i=e.geometry.components;for(var s=0;s<i.length;s++){var o=i[s],u=!0;for(var a=0;a<t.geometry.components[0].components.length;a++)if(!o.containsPoint(t.geometry.components[0].components[a])){u=!1;break}if(!u)continue;if(o.components[0].intersects(t.geometry.components[0])||this.checkSelfIntersection(t.geometry.components[0])){n.destroyFeatures(t);continue}o.addComponent(t.geometry.components[0]),n.removeAllFeatures();for(a=0;a<i.length;a++){var f=new OpenLayers.Feature.Vector(i[a]);f.style=this.drawPlugin.basicStyle,n.addFeatures([f])}t.style=this.drawPlugin.basicStyle,n.addFeatures([t]);var l=t.geometry.components[0].components,c=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.MultiLineString([new OpenLayers.Geometry.LineString(l)]));c.numPoints=l.length,r.addFeatures([c]);break}},scaleup:function(e,t){var n,r;t||(t=1);for(n=0;n<e.length;n++)for(r=0;r<e[n].length;r++)e[n][r].X=Math.floor(e[n][r].X*t),e[n][r].Y=Math.floor(e[n][r].Y*t);return e},splitLine:function(e,t){var n=new OpenLayers.Geometry.Point(0,0),r=[e.geometry.components[0].components[0].components[0].x,e.geometry.components[0].components[0].components[0].y],i=1e4;e.geometry.move(-r[0],-r[1]),e.geometry.resize(i,n),t.geometry.move(-r[0],-r[1]),t.geometry.resize(i,n);var s={strokeColor:"#0000ff",strokeOpacity:1,strokeWidth:2},o=e.geometry.components.concat(t.geometry),u=[new OpenLayers.Feature.Vector(new OpenLayers.Geometry.MultiPolygon),new OpenLayers.Feature.Vector(new OpenLayers.Geometry.MultiLineString,null,s)],a=u[0].geometry.components,f=u[1].geometry.components,l=[],c=[],h=[],p,d=[],v=[],m=[],g=[],y,b=[],w,E,S=new jsts.io.OpenLayersParser,x,T,N=[],C=[],k=null,L,A,O,M,_=[],D=[],P=[],H=[],B,j,F,I,q,R,U,z,W=[],X=[],V=!1,$=!1,J=!1,K,Q,G,Y,Z,et,tt,nt,rt,it,st,ot=1e6,ut=1,at,ft="";Array.prototype.indexOf||(Array.prototype.indexOf=function(e){var t=this.length>>>0,n=Number(arguments[1])||0;n=n<0?Math.ceil(n):Math.floor(n),n<0&&(n+=t);for(;n<t;n++)if(n in this&&this[n]===e)return n;return-1}),Array.prototype.forEach||(Array.prototype.forEach=function(t,n){var r,i;if(this==null)throw new TypeError("this is null or not defined");var s,o=Object(this),u=o.length>>>0;if({}.toString.call(t)!=="[object Function]")throw new TypeError(t+" is not a function");arguments.length>=2&&(r=n),i=0;while(i<u)i in o&&(s=o[i],t.call(r,s,i,o)),i++});for(K=0;K<o.length;K++)if(o[K].id.indexOf("Polygon")!==-1){T=S.read(o[K]);if(!T.isValid())return-1+ft;N.push(T),O=new ClipperLib.Polygon,y=o[K].components,y[0].getArea()>=0?d=y[0].components:d=y[0].components.reverse();for(Q=0;Q<d.length-1;Q++)L=new ClipperLib.IntPoint(d[Q].x,d[Q].y),O.push(L);Y=D.length,D[Y]=[],D[Y].push(O);for(Q=1;Q<y.length;Q++){M=new ClipperLib.Polygon,y[Q].getArea()<=0?d=y[Q].components:d=y[Q].components.reverse();for(G=0;G<d.length-1;G++)L=new ClipperLib.IntPoint(d[G].x,d[G].y),M.push(L);D[K].push(M)}Y=D.length-1,D[Y]=this.scaleup(D[Y],ut)}else o[K].id.indexOf("LineString")!==-1&&(k=S.read(o[K]));ft+=" olOldFeatures ",ft+=o,ft+=" clipSourcePolygons ",ft+=D,ft+=" jstsOldPolygons ",ft+=N,ft+=" jstsLine ",ft+=k;if(k===null)return[o];for(K=0;K<N.length;K++){ft+=" i ",ft+=K.toString()+" / "+N.length,k!==null?U=N[K].getExteriorRing().union(k):U=N[K],z=new jsts.operation.polygonize.Polygonizer,z.add(U),C=z.getPolygons(),ft+=" jstsNewPolygons ",ft+=C,A=[],d=[],c=[];for(Q=0;Q<C.array.length;Q++){ft+="j",ft+=Q+" / "+C.array.length,H=[],O=new ClipperLib.Polygon,x=C.array[Q].shell.points;for(G=0;G<x.length-1;G++)L=new ClipperLib.IntPoint(x[G].x,x[G].y),O.push(L);H.push(O),H=this.scaleup(H,ut),I=new ClipperLib.Clipper,I.AddPolygons(D[K],ClipperLib.PolyType.ptSubject),I.AddPolygons(H,ClipperLib.PolyType.ptClip),j=new ClipperLib.Polygons,R=ClipperLib.ClipType.ctIntersection,q=I.Execute(R,j);if(!q)return-2+ft;ft+=" clipSourcePolygons[i] ",ft+=D[K],ft+=" clipTargetPolygons ",ft+=H,ft+=" clipSolutionPolygons ",ft+=j;if(j.length===0)continue;W=[],l=[],V=!1;for(G=0;G<j.length;G++){if(Math.abs(I.Area(j[G]))<ot)continue;_.push(j[G]);if(I.Area(j[G])>0){B=j[G],g=[];for(Y=0;Y<B.length;Y++){L=B[Y],st=-1;for(Z=0;Z<A.length;Z++)if(L.X===A[Z].X&&L.Y===A[Z].Y){st=Z;break}st>=0?g.push(d[st]):(A.push(L),d.push(new OpenLayers.Geometry.Point(L.X/ut,L.Y/ut)),rt=d.length-1,d[rt].references=[],d[rt].markerPoint=-1,d[rt].boundaryPoint=!1,g.push(d[rt]))}l.push(new OpenLayers.Geometry.Polygon(new OpenLayers.Geometry.LinearRing(g))),rt=l.length-1;for(Y=0;Y<l[rt].components[0].components.length-1;Y++)l[rt].components[0].components[Y].references.push(l[rt].id);W.push(G)}}ft+=" olPoints ",ft+=d,ft+=" olLinearRingPoints ",ft+=g,ft+=" olNewPolygons ",ft+=l;for(G=0;G<j.length;G++){ft+=" Holes k ",ft+=G+" / "+j.length;if(I.Area(j[G])<0){H=[],H.push(j[G]);for(Y=0;Y<W.length;Y++){I=new ClipperLib.Clipper,P=[],P.push(j[W[Y]]),I.AddPolygons(P,ClipperLib.PolyType.ptSubject),I.AddPolygons(H,ClipperLib.PolyType.ptClip),F=new ClipperLib.Polygons,R=ClipperLib.ClipType.ctIntersection,q=I.Execute(R,F);if(!q)return-3+ft;ft+=" clipSubjectPolygons ",ft+=P,ft+=" clipTargetPolygons ",ft+=H,ft+=" clipSolutionHoles ",ft+=F;if(F.length>0){M=j[G],v=[];for(Z=0;Z<M.length;Z++)L=M[Z],v.push(new OpenLayers.Geometry.Point(L.X/ut,L.Y/ut));l[Y].components.push(new OpenLayers.Geometry.LinearRing(v));break}}}}ft+=" olNewPolygons ",ft+=l;for(G=0;G<l.length;G++)a.push(l[G])}}d=u[0].geometry.getVertices(),X=[];for(K=0;K<d.length;K++)X.indexOf(d[K].id)<0&&(d[K].x=d[K].x/i+r[0],d[K].y=d[K].y/i+r[1],X.push(d[K].id));for(K=0;K<a.length;K++){d=a[K].components[0].components,V=d[0].references.length>1,$=V,b=[],h=[],V&&b.push(d[0]);for(Q=1;Q<d.length-1;Q++)this.equalArrays(d[Q].references,d[Q-1].references)||V&&(d[Q].references.length>2&&b.push(d[Q]),h.push(new OpenLayers.Geometry.LineString(b)),b=[]),V=d[Q].references.length>1,V&&b.push(d[Q]);if(V)if($&&h.length>0&&this.equalArrays(d[d.length-2].references,d[0].references))for(Q=b.length-1;Q>=0;Q--)h[0].components.splice(0,0,b[Q]);else d[0].references.length>2&&b.push(d[0]),h.push(new OpenLayers.Geometry.LineString(b));for(Q=0;Q<h.length;Q++)c.push(h[Q])}e:for(G=0;G<c.length;G++){for(Y=0;Y<f.length;Y++){for(Z=0;Z<c[G].components.length;Z++){p=c[G].components[Z],J=!1;for(et=0;et<f[Y].components.length;et++)if(p.id===f[Y].components[et].id){J=!0;break}if(!J)break}if(J)continue e}it=m.length,rt=c[G].components.length-1,m[it]=[c[G].components[0],c[G].components[rt]],m[it][0].x0=m[it][0].x,m[it][0].y0=m[it][0].y,m[it][1].x0=m[it][1].x,m[it][1].y0=m[it][1].y,f.push(c[G])}for(G=0;G<f.length;G++)t:for(Y=0;Y<2;Y++){if(m[G][Y].references.length!==2)continue;for(Z=0;Z<this.drawPlugin.markerLayer.markers.length;Z++)if(this.drawPlugin.markerLayer.markers[Z].reference.point.id===m[G][Y].id)continue t;at=new OpenLayers.Marker(new OpenLayers.LonLat(m[G][Y].x,m[G][Y].y),this.markerIcon.clone()),at.reference={point:m[G][Y],segments:{polygons:[],p:[]}},m[G][Y].markerPoint=this.drawPlugin.markerLayer.markers.length+1,at.markerMouseOffset=new OpenLayers.LonLat(0,0);for(Z=0;Z<m[G][Y].references.length;Z++)for(et=0;et<a.length;et++)if(m[G][Y].references[Z]===a[et].id){E=a[et],d=E.components[0].components;for(tt=0;tt<d.length-1;tt++)if(d[tt].id===at.reference.point.id){tt===0?rt=d.length-2:rt=tt-1,p=d[rt],V=!1;for(nt=0;nt<p.references.length;nt++)if(p.references[nt]!==a[et].id){J=!1;n:for(K=0;K<m.length;K++)for(Q=0;Q<2;Q++)if(m[K][Q].id===p.id){if(m[K][Q].references.length!==2)continue;if(f[G].components.length===2&&this.equalArrays(d[tt].references,p.references))continue;J=!0;break n}if(!J){V=!0;break}}if(V){V=!1,tt===d.length-1?rt=0:rt=tt+1,p=d[rt];for(nt=0;nt<p.references.length;nt++)if(p.references[nt]!==a[et].id){n:for(K=0;K<m.length;K++)for(Q=0;Q<2;Q++)if(m[K][Q].id===p.id){if(m[K][Q].references.length!==2)continue;if(f[G].components.length===2&&this.equalArrays(d[tt].references,p.references))continue;J=!0;break n}if(!J){V=!0;break}}}if(!V){at.reference.segments.polygons.push(E.id);var lt=[[]];lt[0][0]=d[tt],lt[0][1]=d[rt];var ct=tt<rt?[tt,rt]:[rt,tt];lt.push([ct[0]>0?d[ct[0]-1]:d[d.length-2],d[ct[0]]]),lt.push([ct[1]<d.length-1?d[ct[1]+1]:d[0],d[ct[1]]]),at.reference.segments.p.push(lt)}}break}at.events.register("mousedown",at,this.selectActiveMarker),this.drawPlugin.markerLayer.addMarker(at)}for(K=0;K<u[0].geometry.components.length;K++){var ht=u[0].geometry.components[K].components[0].components;for(Q=0;Q<ht.length;Q++)if(ht[Q].references.length==1||ht[Q].markerPoint>=0)ht[Q].boundaryPoint=!0}return u},selectActiveMarker:function(e){OpenLayers.Event.stop(e);var t=this.map.events.getMousePosition(e),n=new OpenLayers.Pixel(t.x,t.y),r=this.map.getLonLatFromPixel(n);this.map.activeMarker=e.object,this.map.activeMarker.markerMouseOffset.lon=r.lon-this.map.activeMarker.lonlat.lon,this.map.activeMarker.markerMouseOffset.lat=r.lat-this.map.activeMarker.lonlat.lat,this.map.events.register("mouseup",this.map,this.map.freezeActiveMarker),this.map.events.register("mousemove",this.map,this.map.moveActiveMarker)},checkSelfIntersection:function(e){var t=e.components,n=[];for(var r=1;r<t.length;r++){var i=new OpenLayers.Geometry.LineString([t[r-1].clone(),t[r].clone()]);n.push(i)}for(var s=0;s<n.length;s++)if(this.segmentIntersects(n[s],n))return!0;return!1},segmentIntersects:function(e,t){for(var n=0;n<t.length;n++)if(!t[n].equals(e)&&t[n].intersects(e)&&!this.startOrStopEquals(t[n],e))return!0;return!1},startOrStopEquals:function(e,t){return e.components[0].equals(t.components[0])?!0:e.components[0].equals(t.components[1])?!0:e.components[1].equals(t.components[0])?!0:e.components[1].equals(t.components[1])},equalArrays:function(e,t){var n=[],r,i;if(!e[0]||!t[0])return!1;if(e.length!=t.length)return!1;for(i=0;i<e.length;i++)r=typeof e[i]+"~"+e[i],n[r]?n[r]++:n[r]=1;for(i=0;i<t.length;i++){r=typeof t[i]+"~"+t[i];if(!n[r])return!1;if(n[r]==0)return!1;n[r]--}return!0},updatePolygons:function(e,t){var n=-1,r=-1,i,s,o,u,a,f,l=this.map.activeMarker,c=this.drawPlugin.markerLayer.markers,h=[[],[]];e:for(i=0;i<2;i++)for(s=0;s<2;s++)if(e[i].id===t[s].id){n=i,r=(s+1)%2;break e}if(n<0)return;var p=null,d=this.drawPlugin.drawLayer.features,v;for(i=0;i<d.length;i++)if(d[i].geometry.id===e[n].references[0]){p=d[i].geometry,v=i;break}var m=-1;i=0;var g=!1;while(i<d[v].geometry.components[0].components.length){if(d[v].geometry.components[0].components[i].id===e[n].id){d[v].geometry.components[0].components.splice(i,1),i==0&&(d[v].geometry.components[0].components.splice(d[v].geometry.components[0]-1,1),d[v].geometry.components[0].components.push(d[v].geometry.components[0].components[0])),g=!0;if(m>=0)break;continue}d[v].geometry.components[0].components[i].id===t[r].id&&(m=i);if(g)break;i+=1}var y=e[n];t:for(i=0;i<2;i++){if(t[r].references[i]===e[n].references[0])continue;var b;for(s=0;s<d.length;s++)if(d[s].geometry.id===t[r].references[i]){b=d[s].geometry;var w=-1,E=-1,S=-1;for(o=0;o<d[s].geometry.components[0].components.length-1;o++){var x=!1;x||d[s].geometry.components[0].components[o].id===t[r].id&&(w=o,E=o===0?d[s].geometry.components[0].components.length-2:o-1,S=o===d[s].geometry.components[0].components.length-2?0:o+1,x=!0)}d[s].geometry.components[0].components[E].boundaryPoint?(d[s].geometry.components[0].components.splice(E+1,0,y),w!==0&&(w+=1)):S!==0?d[s].geometry.components[0].components.splice(S,0,y):d[s].geometry.components[0].components.splice(d[s].geometry.components[0].components.length-1,0,y),e[n].references=[b.id];break t}}for(i=0;i<c.length;i++){l=c[i];for(o=0;o<2;o++){var T=null,N=-1;T=d[o].geometry.components[0].components;for(u=0;u<T.length;u++)if(T[u].id===l.reference.point.id){N=u;break}l.reference.segments.p[o][0][0]=T[N];if(T[N+1].boundaryPoint){l.reference.segments.p[o][0][1]=T[N+1];var C;N===T.length-2?C=1:N===T.length-1?C=2:C=N+2,l.reference.segments.p[o][1][0]=T[C],l.reference.segments.p[o][1][1]=T[N+1];var k=N===0?T.length-2:N-1;l.reference.segments.p[o][2][0]=T[k],l.reference.segments.p[o][2][1]=T[N]}else{var L=N===0?T.length-2:N-1;l.reference.segments.p[o][0][1]=T[L];var A=L===0?T.length-2:L-1;l.reference.segments.p[o][1][0]=T[A],l.reference.segments.p[o][1][1]=T[L],l.reference.segments.p[o][2][0]=T[N+1],l.reference.segments.p[o][2][1]=T[N]}}}}}),define("bundles/framework/bundle/parcel/split/ParcelSplit",function(){}),Oskari.clazz.define("Oskari.mapframework.bundle.parcel.view.MainView",function(e){this.instance=e,this.popupId="parcelForm",this.form=undefined},{getName:function(){return"ParcelMainView"},getSandbox:function(){return this.instance.sandbox},init:function(){},start:function(){var e=this,t=this.instance.sandbox;t.register(e);for(p in e.eventHandlers)t.registerForEventByName(e,p);var n=t.findRegisteredModuleInstance("MainMapModule"),r=Oskari.clazz.create("Oskari.mapframework.bundle.parcel.plugin.DrawPlugin",this.instance);n.registerPlugin(r),n.startPlugin(r),this.drawPlugin=r},stop:function(){var e=this.instance.sandbox;for(p in this.eventHandlers)e.unregisterFromEventByName(this,p);e.unregister(this)},onEvent:function(e){var t=this.eventHandlers[e.getName()];if(!t)return;return t.apply(this,[e])},eventHandlers:{"Toolbar.ToolSelectedEvent":function(e){this._cleanupPopup()},"Parcel.SaveDrawingEvent":function(e){this._handleFinishedDrawingEvent(e)}},_handleFinishedDrawingEvent:function(e){var t=e.getDrawing().geometry.getCentroid(),n={lon:t.x,lat:t.y};this.showPlaceForm(n)},showPlaceForm:function(e){var t=this,n=this.instance.sandbox;n.postRequestByName("DisableMapKeyboardMovementRequest");var r=this.instance.getLocalization();this.form=Oskari.clazz.create("Oskari.mapframework.bundle.parcel.view.PlaceForm",this.instance);var i={place:{}},s=this.drawPlugin.getDrawing();s&&(i.place.area=this.drawPlugin.getParcelGeometry().getArea().toFixed(0),s.attributes&&(i.place.name=s.attributes.name+"-M",i.place.parent_property_id=s.attributes.name,i.place.parent_property_quality=s.attributes.quality)),this.form.setValues(i);var o=[{html:t.form.getForm(),useButtons:!0,primaryButton:r.buttons.save,actions:{}}];o[0].actions[r.buttons.cancel]=function(){t._cleanupPopup();var e=t.instance.sandbox.getRequestBuilder("Toolbar.SelectToolButtonRequest")();t.instance.sandbox.request(t,e)},o[0].actions[r.buttons.print]=function(){t._printForm()},o[0].actions[r.buttons.save]=function(){t._saveForm()};var u=n.getRequestBuilder("InfoBox.ShowInfoBoxRequest")(this.popupId,r.placeform.title,o,e,!0);n.request(t.getName(),u)},_validateForm:function(e){var t=[],n=this.instance.getLocalization("validation");return e.place.name||t.push({name:"name",error:n.placeName}),t},_showValidationErrorMessage:function(e){var t=this.instance.getLocalization(),n=Oskari.clazz.create("Oskari.userinterface.component.Popup"),r=n.createCloseButton(t.buttons.ok),i=jQuery("<ul></ul>");for(var s=0;s<e.length;++s){var o=jQuery("<li></li>");o.append(e[s].error),i.append(o)}n.show(t.validation.title,i,[r])},_saveForm:function(){if(!this.form)return;var e=this,t=this.form.getValues(),n=this._validateForm(t);if(n.length!=0){this._showValidationErrorMessage(n);return}this.__savePlace(t.place)},_printForm:function(){if(!this.form)return;var e=this,t=this.form.getValues(),n=this._validateForm(t);if(n.length!=0){this._showValidationErrorMessage(n);return}this.__printPlace(t.place)},__printPlace:function(e){var t=this;if(!e){var n=t.instance.getLocalization("notification").error;t.instance.showMessage(n.title,n.savePlace);return}var r=function(e){e&&t._cleanupPopup()},i=e?e.name:undefined,s=e?e.desc:undefined;this.instance.getService().printPlace(this.drawPlugin.getDrawing(),this.drawPlugin.getFeatureType(),i,s,r)},__savePlace:function(e){var t=this;if(!e){var n=t.instance.getLocalization("notification").error;t.instance.showMessage(n.title,n.savePlace);return}var r=function(e,n,r){e?t._cleanupPopup():r?t.instance.showMessage("Error in inserting preparcel"):t.instance.showMessage("Error in modifying preparcel")};this.instance.getService().savePlace(t.drawPlugin,e,r)},_loadPreParcel:function(){var e=this,t=function(t,n){t?e._cleanupPopup():e.instance.showMessage("Error in loading preparcel")};this.instance.getService().loadPreParcel(e.drawPlugin,t)},_loadPreParcelData:function(e){var t=this,n=function(e,n){e?t._cleanupPopup():t.instance.showMessage("Error in loading preparcel")};this.instance.getService().loadPreParcelData(e,t.drawPlugin,n)},_cleanupPopup:function(){if(!this.form)return;var e=this.instance.sandbox,t=e.getRequestBuilder("InfoBox.HideInfoBoxRequest")(this.popupId);e.request(this,t),this.form.destroy(),this.form=undefined,e.postRequestByName("EnableMapKeyboardMovementRequest")}},{protocol:["Oskari.mapframework.module.Module"]}),define("bundles/framework/bundle/parcel/view/MainView",function(){}),Oskari.clazz.define("Oskari.mapframework.bundle.parcel.view.PlaceForm",function(e){this.instance=e,this.initialValues=undefined;var t=e.getLocalization("placeform");this.template=jQuery('<div class="parcelform"><div class="field"><div class="help icon-info" title="'+t.tooltip+'"></div>'+"<label>"+t.placename.placeholder+"</label>"+'<input type="text" name="placename" placeholder="'+t.placename.placeholder+'"/>'+"</div>"+'<div class="field">'+"<label>"+t.ptitle.placeholder+"</label>"+'<input type="text" name="ptitle" placeholder="'+t.ptitle.placeholder+'"/>'+"</div>"+'<div class="field">'+"<label>"+t.subtitle.placeholder+"</label>"+'<input type="text" name="subtitle" placeholder="'+t.subtitle.placeholder+'"/>'+"</div>"+'<div class="field">'+"<label>"+t.description.placeholder+"</label>"+'<textarea name="description" placeholder="'+t.description.placeholder+'">'+"</textarea>"+"</div>"+'<div class="field">'+"<label>"+t.parent_property_id.placeholder+"</label>"+'<input type="text" name="parent_property_id" placeholder="'+t.parent_property_id.placeholder+'"/>'+"</div>"+'<div class="field">'+"<label>"+t.parent_property_quality.placeholder+"</label>"+'<input type="text" name="parent_property_quality" placeholder="'+t.parent_property_quality.placeholder+'"/>'+"</div>"+'<div class="field">'+"<label>"+t.area.placeholder+"</label>"+'<input type="text" name="area" placeholder="'+t.area.placeholder+'"/>'+"</div>"+'<div class="field">'+"<label>"+t.reporter.placeholder+"</label>"+'<input type="text" name="reporter" placeholder="'+t.reporter.placeholder+'"/>'+"</div>"+"</div>")},{getForm:function(){var e=this.template.clone(),t=this.instance.getLocalization("placeform");return this.initialValues&&(e.find("input[name=placename]").attr("value",this.initialValues.place.name),e.find("textarea[name=description]").append(this.initialValues.place.desc),e.find("input[name=ptitle]").attr("value",this.initialValues.place.title),e.find("input[name=subtitle]").attr("value",this.initialValues.place.subtitle),e.find("input[name=parent_property_id]").attr("value",this.initialValues.place.parent_property_id),e.find("input[name=parent_property_quality]").attr("value",this.initialValues.place.parent_property_quality),e.find("input[name=area]").attr("value",this.initialValues.place.area),e.find("input[name=reporter]").attr("value",this.initialValues.place.reporter)),e},getValues:function(){var e={},t=this._getOnScreenForm();if(t.length>0){var n=t.find("input[name=placename]").val(),r=t.find("textarea[name=description]").val(),i=t.find("input[name=ptitle]").val(),s=t.find("input[name=subtitle]").val(),o=t.find("input[name=parent_property_id]").val(),u=t.find("input[name=parent_property_quality]").val(),a=t.find("input[name=area]").val(),f=t.find("input[name=reporter]").val();e.place={name:n,desc:r,title:i,subtitle:s,parent_property_id:o,parent_property_quality:u,area:a,reporter:f}}return e},setValues:function(e){var t=this._getOnScreenForm();t.length>0&&(t.find("input[name=placename]").val(e.place.name),t.find("textarea[name=description]").val(e.place.desc),t.find("input[name=ptitle]").val(e.place.title),t.find("input[name=subtitle]").val(e.place.subtitle),t.find("input[name=parent_property_id]").val(e.place.parent_property_id),t.find("input[name=parent_property_quality]").val(e.place.parent_property_quality),t.find("input[name=area]").val(e.place.area),t.find("input[name=reporter]").val(e.place.reporter)),this.initialValues=e},destroy:function(){var e=this._getOnScreenForm()},_getOnScreenForm:function(){return jQuery("div.parcelform")}}),define("bundles/framework/bundle/parcel/view/PlaceForm",function(){}),Oskari.clazz.define("Oskari.mapframework.bundle.parcel.handler.ButtonHandler",function(e){this.instance=e,this.buttonGroup="parcel",this.ignoreEvents=!1,this.dialog=null;var t=this;this.buttons={line:{iconCls:"parcel-draw-line",tooltip:"",sticky:!0,callback:function(){t.instance.view.drawPlugin.splitSelection=!1,t._startNewDrawing({drawMode:"line"})}},area:{iconCls:"parcel-draw-area",tooltip:"",sticky:!0,callback:function(){t.instance.view.drawPlugin.splitSelection=!1,t._startNewDrawing({drawMode:"area"})}},selector:{iconCls:"parcel-selector",tooltip:"",sticky:!0,callback:function(){t.instance.view.drawPlugin.splitSelection=!1,t.instance.view.drawPlugin.splitFeature(!0)}},clear:{iconCls:"parcel-clear",tooltip:"",sticky:!0,callback:function(){var e=t.instance.view.drawPlugin;e.clear(),e.drawLayer.addFeatures(e.backupFeatures),t.setButtonEnabled("line",!0),t.setButtonEnabled("area",!0),t.setButtonEnabled("selector",!0),t.setButtonEnabled("save",!1)}},save:{iconCls:"tool-save-view",tooltip:"",sticky:!0,callback:function(){t._saveDrawing()}}}},{getName:function(){return"ParcelButtonHandler"},init:function(){},start:function(){var e=this,t=this.instance.getSandbox();t.register(e);for(p in e.eventHandlers)t.registerForEventByName(e,p);var n=t.getRequestBuilder("Toolbar.AddToolButtonRequest");for(var r in this.buttons)t.request(this,n(r,this.buttonGroup,this.buttons[r]))},setEnabled:function(e){var t,n,r=this.instance.getLocalization("tools");if(e){this.enableButtons();for(t in this.buttons)n=r[t].tooltip,this.buttons[t].tooltip=n,jQuery("div.tool."+this.buttons[t].iconCls).attr("title",n)}else{this.disableButtons();for(t in this.buttons)n=r.tooltip,jQuery("div.tool."+this.buttons[t].iconCls).attr("title",n)}},setButtonEnabled:function(e,t){var n=this.instance.sandbox,r=n.getRequestBuilder("Toolbar.ToolButtonStateRequest");n.request(this,r(e,"default-"+this.buttonGroup,t))},enableButtons:function(){var e=this.instance.sandbox,t=e.getRequestBuilder("Toolbar.ToolButtonStateRequest");e.request(this,t(undefined,"default-"+this.buttonGroup,!0))},disableButtons:function(){var e=this.instance.sandbox,t=e.getRequestBuilder("Toolbar.ToolButtonStateRequest");e.request(this,t(undefined,"default-"+this.buttonGroup,!1))},_startNewDrawing:function(e){if(this.instance.view.drawPlugin.drawLayer.features[0].geometry.CLASS_NAME!=="OpenLayers.Geometry.MultiPolygon")return;if(this.instance.view.drawPlugin.editLayer.features.length!==0)return;var t=this.instance.sandbox.getEventBuilder("Parcel.ParcelSelectedEvent")();this.instance.sandbox.notifyAll(t),this._sendDrawRequest(e)},_saveDrawing:function(){var e=this.instance.sandbox.getRequestBuilder("Parcel.SaveDrawingRequest")();this.instance.sandbox.request(this,e)},_sendDrawRequest:function(e){var t=this.instance.sandbox.getRequestBuilder("Parcel.StartDrawingRequest")(e);this.instance.sandbox.request(this,t),e.geometry||this._showDrawHelper(e.drawMode)},_showDrawHelper:function(e){var t=this,n=this.instance.getLocalization("tools")[e],r=this.instance.getLocalization("buttons"),i=this.instance.getLocalization("title"),s=n["new"],o=Oskari.clazz.create("Oskari.userinterface.component.Popup");this.dialog=o;var u=[],a=Oskari.clazz.create("Oskari.userinterface.component.Button");a.setTitle(r.cancel),a.setHandler(function(){var e=t.instance.sandbox.getRequestBuilder("Toolbar.SelectToolButtonRequest")();t.instance.sandbox.request(t,e),t.sendCancelDrawRequest()}),u.push(a),o.show(i,s,u),o.addClass("parcel"),o.moveTo("#toolbar div.toolrow[tbgroup=default-parcel]","top")},sendStopDrawRequest:function(){var e=this,t=this.instance.sandbox.getRequestBuilder("Parcel.StopDrawingRequest")();this.instance.sandbox.request(this,t),this.dialog&&this.dialog.close()},sendCancelDrawRequest:function(){var e=this,t=this.instance.sandbox.getRequestBuilder("Parcel.CancelDrawingRequest")();this.instance.sandbox.request(this,t),this.dialog&&this.dialog.close()},stop:function(){jQuery("div.parcel div.button").die()},onEvent:function(e){var t=this.eventHandlers[e.getName()];if(!t)return;return t.apply(this,[e])},eventHandlers:{"Toolbar.ToolSelectedEvent":function(e){this.ignoreEvents||this.sendCancelDrawRequest()},"Parcel.ParcelSelectedEvent":function(e){if(!e.getPlace()){var t=this.instance.sandbox.getRequestBuilder("Toolbar.SelectToolButtonRequest")();this.instance.sandbox.request(this,t)}},"Parcel.FinishedDrawingEvent":function(e){this.ignoreEvents=!0;var t=this.instance.sandbox.getRequestBuilder("Toolbar.SelectToolButtonRequest")();this.instance.sandbox.request(this,t),this.ignoreEvents=!1,this.dialog&&this.dialog.close()}}},{protocol:["Oskari.mapframework.module.Module"]}),define("bundles/framework/bundle/parcel/handler/ButtonHandler",function(){}),Oskari.clazz.define("Oskari.mapframework.bundle.parcel.handler.ParcelSelectorHandler",function(e){this.instance=e,this.ignoreEvents=!1},{getName:function(){return"ParcelSelectorHandler"},init:function(){},start:function(){var e=this,t=this.instance.sandbox,n;t.register(e);for(n in e.eventHandlers)e.eventHandlers.hasOwnProperty(n)&&t.registerForEventByName(e,n)},stop:function(){},onEvent:function(e){var t=this.eventHandlers[e.getName()];if(!t)return;return t.apply(this,[e])},loadParcel:function(e){var t=this;t.instance.getService().loadParcel(e,function(e){t._loadCallback.call(t,e,t.instance.conf.parcelFeatureType)})},eventHandlers:{"ParcelSelector.ParcelSelectedEvent":function(e){var t=this;t.ignoreEvents||e&&e.getFid()&&t.loadParcel(e.getFid())},"ParcelSelector.RegisterUnitSelectedEvent":function(e){var t=this;t.ignoreEvents||e&&e.getFid()&&t.instance.getService().loadRegisterUnit(e.getFid(),function(e){t._loadCallback.call(t,e,t.instance.conf.registerUnitFeatureType)})}},_loadCallback:function(e,t){e&&this.instance.getDrawPlugin().drawFeature(e,t)}},{protocol:["Oskari.mapframework.module.Module"]}),define("bundles/framework/bundle/parcel/handler/ParcelSelectorHandler",function(){}),Oskari.clazz.define("Oskari.mapframework.bundle.parcel.DrawingToolInstance",function(){this._localization=null,this.sandbox=null,this.parcelService=undefined,this.idPrefix="parcel"},{getName:function(){return"Parcel"},getSandbox:function(){return this.sandbox},getLocalization:function(e){return this._localization||(this._localization=Oskari.getLocalization(this.getName())),e?this._localization&&this._localization[e]?this._localization[e]:e:this._localization},showMessage:function(e,t){var n=this.getLocalization(),r=Oskari.clazz.create("Oskari.userinterface.component.Popup"),i=Oskari.clazz.create("Oskari.userinterface.component.Button");i.setTitle(n.buttons.ok),i.addClass("primary"),i.setHandler(function(){r.close(!0)}),r.show(e,t,[i])},getService:function(){return this.parcelService},getDrawPlugin:function(){return this.view.drawPlugin},getMainView:function(){return this.view},update:function(){},start:function(){var e=Oskari.$("sandbox"),t=e.getService("Oskari.mapframework.service.MapLayerService"),n=this,r,i;this.sandbox=e,n.conf&&n.conf.proxyUrl&&(OpenLayers.ProxyHost=n.conf.proxyUrl);if(n.conf&&n.conf.stickyLayerIds)for(r in n.conf.stickyLayerIds)i=n.conf.stickyLayerIds[r],t.makeLayerSticky(i,!0);n.parcelService=Oskari.clazz.create("Oskari.mapframework.bundle.parcel.service.ParcelService",n),n.sandbox.registerService(n.parcelService),n.parcelService.init(),n.view=Oskari.clazz.create("Oskari.mapframework.bundle.parcel.view.MainView",n),n.view.start(),n.parcelSelectorHandler=Oskari.clazz.create("Oskari.mapframework.bundle.parcel.handler.ParcelSelectorHandler",n),n.parcelSelectorHandler.start(),n.state&&n.state.initRef&&n.parcelSelectorHandler.loadParcel(n.state.initRef)},stop:function(){this.sandbox=null}},{protocol:["Oskari.bundle.BundleInstance"]}),define("bundles/framework/bundle/parcel/instance",function(){}),define("normalize",["require","module"],function(e,t){function o(e,t,n){if(e.indexOf("data:")===0)return e;e=r(e);if(e.match(/^\//)||e.match(s))return e;var i=n.match(s),o=t.match(s);return o&&(!i||i[1]!=o[1]||i[2]!=o[2])?u(e,t):a(u(e,t),n)}function u(e,t){e.substr(0,2)=="./"&&(e=e.substr(2));var n=t.split("/"),r=e.split("/");n.pop();while(curPart=r.shift())curPart==".."?n.pop():n.push(curPart);return n.join("/")}function a(e,t){var n=t.split("/");n.pop(),t=n.join("/")+"/",i=0;while(t.substr(i,1)==e.substr(i,1))i++;while(t.substr(i,1)!="/")i--;t=t.substr(i+1),e=e.substr(i+1),n=t.split("/");var r=e.split("/");out="";while(n.shift())out+="../";while(curPart=r.shift())out+=curPart+"/";return out.substr(0,out.length-1)}var n=/([^:])\/+/g,r=function(e){return e.replace(n,"$1/")},s=/[^\:\/]*:\/\/([^\/])*/,f=function(e,t,n,i){t=r(t),n=r(n);var s=/@import\s*("([^"]*)"|'([^']*)')|url\s*\(\s*(\s*"([^"]*)"|'([^']*)'|[^\)]*\s*)\s*\)/ig,u,a,e;while(u=s.exec(e)){a=u[3]||u[2]||u[5]||u[6]||u[4];var f;i&&a.substr(0,1)=="/"?f=i+a:f=o(a,t,n);var l=u[5]||u[6]?1:0;e=e.substr(0,s.lastIndex-a.length-l-1)+f+e.substr(s.lastIndex-l-1),s.lastIndex=s.lastIndex+(f.length-a.length)}return e};return f.convertURIBase=o,f}),define("css",["./normalize"],function(e){function n(e,t){for(var n=0,r=e.length;n<r;n++)if(e[n]===t)return n;return-1}var t=0;if(typeof window=="undefined")return{load:function(e,t,n){n()}};var r=!1,i=document.getElementsByTagName("head")[0],s=window.navigator.userAgent.match(/Trident\/([^ ;]*)|AppleWebKit\/([^ ;]*)|Opera\/([^ ;]*)|rv\:([^ ;]*)(.*?)Gecko\/([^ ;]*)|MSIE\s([^ ;]*)/),o=!1;!s||(s[1]||s[7]?(o=parseInt(s[1])<6||parseInt(s[7])<=9,s="trident"):s[2]?(o=!0,s="webkit"):s[3]||(s[4]?(o=parseInt(s[4])<18,s="gecko"):r&&alert("Engine detection failed")));var u={},a=/^\/|([^\:\/]*:)/;u.pluginBuilder="./css-builder";var f=[],l={},c=[];u.addBuffer=function(e){if(n(f,e)!=-1)return;if(n(c,e)!=-1)return;f.push(e),c.push(e)},u.setBuffer=function(t,n){var r=window.location.pathname.split("/");r.pop(),r=r.join("/")+"/";var i=require.toUrl("base_url").split("/");i.pop();var s=i.join("/")+"/";s=e.convertURIBase(s,r,"/"),s.match(a)||(s="/"+s),s.substr(s.length-1,1)!="/"&&(s+="/"),u.inject(e(t,s,r));for(var o=0;o<f.length;o++)(n&&f[o].substr(f[o].length-5,5)==".less"||!n&&f[o].substr(f[o].length-4,4)==".css")&&(function(e){l[e]=l[e]||!0,setTimeout(function(){typeof l[e]=="function"&&l[e](),delete l[e]},7)}(f[o]),f.splice(o--,1))},u.attachBuffer=function(e,t){for(var r=0;r<f.length;r++)if(f[r]==e)return l[e]=t,!0;if(l[e]===!0)return l[e]=t,!0;if(n(c,e)!=-1)return t(),!0};var h=function(e,t){setTimeout(function(){for(var n=0;n<document.styleSheets.length;n++){var r=document.styleSheets[n];if(r.href==e.href)return t()}h(e,t)},10)},p=function(e,t){setTimeout(function(){try{return e.sheet.cssRules,t()}catch(n){}p(e,t)},10)};if(s=="trident"&&o)var d=[],v=[],m=0,g=function(e,t){var n;v.push({url:e,cb:t}),n=d.shift(),!n&&m++<31&&(n=document.createElement("style"),i.appendChild(n)),n&&y(n)},y=function(e){var t=v.shift();if(!t){e.onload=w,d.push(e);return}e.onload=function(){t.cb(t.ss),y(e)};try{var n=e.styleSheet;t.ss=n.imports[n.addImport(t.url)]}catch(r){alert("Got Error:"+r)}};var b=function(e){var t=document.createElement("link");return t.type="text/css",t.rel="stylesheet",t.href=e,t},w=function(){};u.linkLoad=function(e,t){var n=setTimeout(function(){r&&alert("timeout"),t()},A*1e3-100),u=function(){clearTimeout(n),a&&(a.onload=w),setTimeout(t,7)};if(!o){var a=b(e);a.onload=u,i.appendChild(a)}else if(s=="webkit"){var a=b(e);h(a,u),i.appendChild(a)}else if(s=="gecko"){var f=document.createElement("style");f.textContent='@import "'+e+'"',p(f,u),i.appendChild(f)}else s=="trident"&&g(e,u)};var E=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"],S={},x=function(e,t,n){if(S[e]){t(S[e]);return}var r,i,s;if(typeof XMLHttpRequest!="undefined")r=new XMLHttpRequest;else if(typeof ActiveXObject!="undefined")for(i=0;i<3;i+=1){s=E[i];try{r=new ActiveXObject(s)}catch(o){}if(r){E=[s];break}}r.open("GET",e,requirejs.inlineRequire?!1:!0),r.onreadystatechange=function(i){var s,o;r.readyState===4&&(s=r.status,s>399&&s<600?(o=new Error(e+" HTTP status: "+s),o.xhr=r,n(o)):(S[e]=r.responseText,t(r.responseText)))},r.send(null)},T=0,N;u.inject=function(e){T<31&&(N=document.createElement("style"),N.type="text/css",i.appendChild(N),T++),N.styleSheet?N.styleSheet.cssText+=e:N.appendChild(document.createTextNode(e))};var C=/@import\s*(url)?\s*(('([^']*)'|"([^"]*)")|\(('([^']*)'|"([^"]*)"|([^\)]*))\))\s*;?/g,k=window.location.pathname.split("/");k.pop(),k=k.join("/")+"/";var L=function(t,n,r){t.match(a)||(t="/"+e.convertURIBase(t,k,"/")),x(t,function(i){i=e(i,t,k);var s=[],o=[],u=[],a;while(a=C.exec(i)){var f=a[4]||a[5]||a[7]||a[8]||a[9];s.push(f),o.push(C.lastIndex-a[0].length),u.push(a[0].length)}var l=0;for(var c=0;c<s.length;c++)(function(e){L(s[e],function(t){i=i.substr(0,o[e])+t+i.substr(o[e]+u[e]);var r=t.length-u[e];for(var a=e+1;a<s.length;a++)o[a]+=r;l++,l==s.length&&n(i)},r)})(c);s.length==0&&n(i)},r)};u.normalize=function(e,t){return e.substr(e.length-4,4)==".css"&&(e=e.substr(0,e.length-4)),t(e)};var A,O=!1;return u.load=function(e,t,n,i,s){A=A||i.waitSeconds||7;var a=e+(s?".less":".css");if(u.attachBuffer(a,n))return;var f=t.toUrl(a);!O&&r&&(alert(o?"hacking links":"not hacking"),O=!0),s?L(f,function(e){s&&(e=s(e,function(e){u.inject(e),setTimeout(n,7)}))}):u.linkLoad(f,n)},r&&(u.inspect=function(){if(stylesheet.styleSheet)return stylesheet.styleSheet.cssText;if(stylesheet.innerHTML)return stylesheet.innerHTML}),u}),requirejs.s.contexts._.nextTick=function(e){e()},require(["css"],function(e){e.addBuffer("resources/framework/bundle/parcel/css/style.css")}),requirejs.s.contexts._.nextTick=requirejs.nextTick,Oskari.registerLocalization({lang:"fi",key:"Parcel",value:{title:"Kohteet",desc:"",tools:{line:{tooltip:"Jaa kohde viivalla","new":"Halkaise kohde viivalla. Lisää viivan taitepiste klikkaamalla karttaa. Lopeta piirto tuplaklikkauksella.",edit:"Muokkaa viivaa raahaamalla viivan taitepisteitä.",save:"Tallenna muoto"},area:{tooltip:"Jaa kohde alueella","new":"Piirrä reikä kohteeseen. Lisää alueen taitepisteet klikkaamalla karttaa. Lopeta piirto tuplaklikkauksella.",edit:"Muokkaa muotoa raahaamalla reunaviivan taitepisteitä.",save:"Tallenna muoto"},selector:{tooltip:"Jaa kohde valitsemalla kokonainen palsta"},clear:{tooltip:"Tyhjennä"},save:{tooltip:"Tee piirros ja tulosta"},tooltip:"Hae ensin kiinteistöä"},buttons:{ok:"OK",cancel:"Peruuta",print:"Tulosta",save:"Tallenna",movePlaces:"Siirrä kohteet ja poista"},placeform:{title:"Määräalan tiedot",tooltip:"Anna määräalan tiedot ja tulosta tai tallenna",placename:{placeholder:"Määräalan tunnus"},ptitle:{placeholder:"Piirroksen otsikko"},subtitle:{placeholder:"Piirroksen alaotsikko"},description:{placeholder:"Yleiskuvaus"},parent_property_id:{placeholder:"Kantatilan tunnus"},parent_property_quality:{placeholder:"Kantatilan lähdeaineisto"},reporter:{placeholder:"Määräalan laatija"},area:{placeholder:"Pinta-ala (m²)"}},notification:{placeLoading:{title:"Kohdetta ladataan",message:""},calculating:{title:"Lasketaan jakoa",message:""},placeAdding:{title:"Kohdetta tallennetaan",message:""},error:{title:"Virhe!",savePlace:"Kohteen tallentaminen ei onnistunut.",loadPlace:"Kohteen lataaminen ei onnistunut"}},validation:{title:"Tiedoissa puutteita:",placeName:"Kohteen nimi puuttuu."}}}),define("bundles/framework/bundle/parcel/locale/fi",function(){}),define("src/framework/parcel/module",["oskari","jquery","bundles/framework/bundle/parcel/event/FinishedDrawingEvent","bundles/framework/bundle/parcel/event/SaveDrawingEvent","bundles/framework/bundle/parcel/event/ParcelSelectedEvent","bundles/framework/bundle/parcel/event/ParcelInfoLayerRegisterEvent","bundles/framework/bundle/parcel/event/ParcelInfoLayerUnregisterEvent","bundles/framework/bundle/parcel/plugin/DrawPlugin","bundles/framework/bundle/parcel/request/SaveDrawingRequest","bundles/framework/bundle/parcel/request/StopDrawingRequest","bundles/framework/bundle/parcel/request/CancelDrawingRequest","bundles/framework/bundle/parcel/request/StartDrawingRequest","bundles/framework/bundle/parcel/request/SaveDrawingRequestHandler","bundles/framework/bundle/parcel/request/StopDrawingRequestHandler","bundles/framework/bundle/parcel/request/CancelDrawingRequestHandler","bundles/framework/bundle/parcel/request/StartDrawingRequestHandler","bundles/framework/bundle/parcel/model/PreParcel","bundles/framework/bundle/parcel/model/PreParcelData","bundles/framework/bundle/parcel/service/ParcelService","bundles/framework/bundle/parcel/service/ParcelWfst","bundles/framework/bundle/parcel/service/PreParcelWFSTStore","bundles/framework/bundle/parcel/service/ParcelPlot","bundles/framework/bundle/parcel/split/ParcelSplit","bundles/framework/bundle/parcel/view/MainView","bundles/framework/bundle/parcel/view/PlaceForm","bundles/framework/bundle/parcel/handler/ButtonHandler","bundles/framework/bundle/parcel/handler/ParcelSelectorHandler","bundles/framework/bundle/parcel/instance","css!resources/framework/bundle/parcel/css/style.css","bundles/framework/bundle/parcel/locale/fi"],function(e,t){return e.bundleCls("parcel").category({create:function(){var t=this,n=e.clazz.create("Oskari.mapframework.bundle.parcel.DrawingToolInstance");return n},update:function(e,t,n,r){e.alert("RECEIVED update notification "+r)}})}),requirejs.s.contexts._.nextTick=function(e){e()},require(["css"],function(e){e.setBuffer("div.parcelform div.help {\r\n  float: right; }\r\n\r\n/* Wide fields for place inputs  */\r\ndiv.parcelform div.field {\r\n  padding-bottom: 10px; }\r\n\r\ndiv.parcelform {\r\n  width: 300px;\r\n  height: 500px; }\r\n\r\ndiv.parcelform input {\r\n  width: 80%; }\r\n\r\ndiv.parcelform textarea, div.parcelform select {\r\n  width: 80%; }\r\n\r\ndiv.parcel div.buttons div.button {\r\n  margin: 10px;\r\n  padding: 10px;\r\n  border: 1px solid;\r\n  border-radius: 5px;\r\n  box-shadow: 5px 5px 5px #888; }\r\n\r\n.divmanazerpopup.parcel {\r\n  max-width: 260px; }\r\n\r\ncircle.parceleditor {\r\n  cursor: move; }\r\n\r\n#contentMap div.basic_printout {\r\n  left: auto !important; }\r\n")}),requirejs.s.contexts._.nextTick=requirejs.nextTick;